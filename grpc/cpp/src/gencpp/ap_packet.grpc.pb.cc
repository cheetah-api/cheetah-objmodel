// Generated by the gRPC protobuf plugin.
// If you make any local change, they will be lost.
// source: ap_packet.proto

#include "ap_packet.pb.h"
#include "ap_packet.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace access_point {

static const char* APPackets_method_names[] = {
  "/access_point.APPackets/APPacketsGet",
};

std::unique_ptr< APPackets::Stub> APPackets::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< APPackets::Stub> stub(new APPackets::Stub(channel));
  return stub;
}

APPackets::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_APPacketsGet_(APPackets_method_names[0], ::grpc::RpcMethod::SERVER_STREAMING, channel)
  {}

::grpc::ClientReader< ::access_point::APPacketsMsgRsp>* APPackets::Stub::APPacketsGetRaw(::grpc::ClientContext* context, const ::access_point::APPacketsMsg& request) {
  return new ::grpc::ClientReader< ::access_point::APPacketsMsgRsp>(channel_.get(), rpcmethod_APPacketsGet_, context, request);
}

::grpc::ClientAsyncReader< ::access_point::APPacketsMsgRsp>* APPackets::Stub::AsyncAPPacketsGetRaw(::grpc::ClientContext* context, const ::access_point::APPacketsMsg& request, ::grpc::CompletionQueue* cq, void* tag) {
  return new ::grpc::ClientAsyncReader< ::access_point::APPacketsMsgRsp>(channel_.get(), cq, rpcmethod_APPacketsGet_, context, request, tag);
}

APPackets::Service::Service() {
  (void)APPackets_method_names;
  AddMethod(new ::grpc::RpcServiceMethod(
      APPackets_method_names[0],
      ::grpc::RpcMethod::SERVER_STREAMING,
      new ::grpc::ServerStreamingHandler< APPackets::Service, ::access_point::APPacketsMsg, ::access_point::APPacketsMsgRsp>(
          std::mem_fn(&APPackets::Service::APPacketsGet), this)));
}

APPackets::Service::~Service() {
}

::grpc::Status APPackets::Service::APPacketsGet(::grpc::ServerContext* context, const ::access_point::APPacketsMsg* request, ::grpc::ServerWriter< ::access_point::APPacketsMsgRsp>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace access_point

