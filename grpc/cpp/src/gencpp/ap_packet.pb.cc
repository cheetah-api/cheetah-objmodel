// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_packet.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ap_packet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cheetah {

namespace {

const ::google::protobuf::Descriptor* APPacketHdr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  APPacketHdr_reflection_ = NULL;
struct APPacketHdrOneofInstance {
  int mgmt_;
  int ctrl_;
  int data_;
  int cisco_;
}* APPacketHdr_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* APPacketsMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  APPacketsMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* APPacketsMsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  APPacketsMsgRsp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* APMsgType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* APMgmtMsgSubtype_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* APCtrlMsgSubtype_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* APDataMsgSubtype_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* APCiscoMsgSubtype_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ap_5fpacket_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ap_5fpacket_2eproto() {
  protobuf_AddDesc_ap_5fpacket_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ap_packet.proto");
  GOOGLE_CHECK(file != NULL);
  APPacketHdr_descriptor_ = file->message_type(0);
  static const int APPacketHdr_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APPacketHdr, msgtype_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(APPacketHdr_default_oneof_instance_, mgmt_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(APPacketHdr_default_oneof_instance_, ctrl_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(APPacketHdr_default_oneof_instance_, data_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(APPacketHdr_default_oneof_instance_, cisco_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APPacketHdr, Subtype_),
  };
  APPacketHdr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      APPacketHdr_descriptor_,
      APPacketHdr::internal_default_instance(),
      APPacketHdr_offsets_,
      -1,
      -1,
      -1,
      APPacketHdr_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APPacketHdr, _oneof_case_[0]),
      sizeof(APPacketHdr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APPacketHdr, _internal_metadata_));
  APPacketsMsg_descriptor_ = file->message_type(1);
  static const int APPacketsMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APPacketsMsg, packethdr_),
  };
  APPacketsMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      APPacketsMsg_descriptor_,
      APPacketsMsg::internal_default_instance(),
      APPacketsMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(APPacketsMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APPacketsMsg, _internal_metadata_));
  APPacketsMsgRsp_descriptor_ = file->message_type(2);
  static const int APPacketsMsgRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APPacketsMsgRsp, errstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APPacketsMsgRsp, packethdr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APPacketsMsgRsp, packetlen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APPacketsMsgRsp, packetbuf_),
  };
  APPacketsMsgRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      APPacketsMsgRsp_descriptor_,
      APPacketsMsgRsp::internal_default_instance(),
      APPacketsMsgRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(APPacketsMsgRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APPacketsMsgRsp, _internal_metadata_));
  APMsgType_descriptor_ = file->enum_type(0);
  APMgmtMsgSubtype_descriptor_ = file->enum_type(1);
  APCtrlMsgSubtype_descriptor_ = file->enum_type(2);
  APDataMsgSubtype_descriptor_ = file->enum_type(3);
  APCiscoMsgSubtype_descriptor_ = file->enum_type(4);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ap_5fpacket_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      APPacketHdr_descriptor_, APPacketHdr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      APPacketsMsg_descriptor_, APPacketsMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      APPacketsMsgRsp_descriptor_, APPacketsMsgRsp::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ap_5fpacket_2eproto() {
  APPacketHdr_default_instance_.Shutdown();
  delete APPacketHdr_default_oneof_instance_;
  delete APPacketHdr_reflection_;
  APPacketsMsg_default_instance_.Shutdown();
  delete APPacketsMsg_reflection_;
  APPacketsMsgRsp_default_instance_.Shutdown();
  delete APPacketsMsgRsp_reflection_;
}

void protobuf_InitDefaults_ap_5fpacket_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::cheetah::protobuf_InitDefaults_ap_5fcommon_5ftypes_2eproto();
  APPacketHdr_default_instance_.DefaultConstruct();
  APPacketHdr_default_oneof_instance_ = new APPacketHdrOneofInstance();
  APPacketsMsg_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  APPacketsMsgRsp_default_instance_.DefaultConstruct();
  APPacketHdr_default_instance_.get_mutable()->InitAsDefaultInstance();
  APPacketsMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  APPacketsMsgRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_ap_5fpacket_2eproto_once_);
void protobuf_InitDefaults_ap_5fpacket_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_ap_5fpacket_2eproto_once_,
                 &protobuf_InitDefaults_ap_5fpacket_2eproto_impl);
}
void protobuf_AddDesc_ap_5fpacket_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_ap_5fpacket_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017ap_packet.proto\022\007cheetah\032\025ap_common_ty"
    "pes.proto\"\353\001\n\013APPacketHdr\022#\n\007MsgType\030\001 \001"
    "(\0162\022.cheetah.APMsgType\022)\n\004mgmt\030\002 \001(\0162\031.c"
    "heetah.APMgmtMsgSubtypeH\000\022)\n\004ctrl\030\003 \001(\0162"
    "\031.cheetah.APCtrlMsgSubtypeH\000\022)\n\004data\030\004 \001"
    "(\0162\031.cheetah.APDataMsgSubtypeH\000\022+\n\005cisco"
    "\030\005 \001(\0162\032.cheetah.APCiscoMsgSubtypeH\000B\t\n\007"
    "Subtype\"7\n\014APPacketsMsg\022\'\n\tPacketHdr\030\001 \003"
    "(\0132\024.cheetah.APPacketHdr\"\213\001\n\017APPacketsMs"
    "gRsp\022)\n\tErrStatus\030\001 \001(\0132\026.cheetah.APErro"
    "rStatus\022\'\n\tPacketHdr\030\002 \001(\0132\024.cheetah.APP"
    "acketHdr\022\021\n\tPacketLen\030\003 \001(\r\022\021\n\tPacketBuf"
    "\030\004 \001(\014*~\n\tAPMsgType\022\030\n\024AP_MSG_TYPE_RESER"
    "VED\020\000\022\024\n\020AP_MSG_TYPE_MGMT\020\001\022\024\n\020AP_MSG_TY"
    "PE_CTRL\020\002\022\024\n\020AP_MSG_TYPE_DATA\020\003\022\025\n\021AP_MS"
    "G_TYPE_CISCO\020\004*\257\001\n\020APMgmtMsgSubtype\022 \n\034A"
    "P_MGMT_MSG_SUBTYPE_RESERVED\020\000\022\035\n\031AP_MGMT"
    "_MSG_SUBTYPE_ASSOC\020\001\022\034\n\030AP_MGMT_MSG_SUBT"
    "YPE_AUTH\020\002\022\035\n\031AP_MGMT_MSG_SUBTYPE_PROBE\020"
    "\004\022\035\n\027AP_MGMT_MSG_SUBTYPE_ALL\020\377\377\003*S\n\020APCt"
    "rlMsgSubtype\022 \n\034AP_CTRL_MSG_SUBTYPE_RESE"
    "RVED\020\000\022\035\n\027AP_CTRL_MSG_SUBTYPE_ALL\020\377\377\003*\311\001"
    "\n\020APDataMsgSubtype\022 \n\034AP_DATA_MSG_SUBTYP"
    "E_RESERVED\020\000\022\033\n\027AP_DATA_MSG_SUBTYPE_ARP\020"
    "\001\022\034\n\030AP_DATA_MSG_SUBTYPE_DHCP\020\002\022\033\n\027AP_DA"
    "TA_MSG_SUBTYPE_EAP\020\004\022\034\n\030AP_DATA_MSG_SUBT"
    "YPE_ICMP\020\010\022\035\n\027AP_DATA_MSG_SUBTYPE_ALL\020\377\377"
    "\003*t\n\021APCiscoMsgSubtype\022!\n\035AP_CISCO_MSG_S"
    "UBTYPE_RESERVED\020\000\022\034\n\030AP_CISCO_MSG_SUBTYP"
    "E_NDP\020\001\022\036\n\030AP_CISCO_MSG_SUBTYPE_ALL\020\377\377\0032"
    "N\n\tAPPackets\022A\n\014APPacketsGet\022\025.cheetah.A"
    "PPacketsMsg\032\030.cheetah.APPacketsMsgRsp0\001b"
    "\006proto3", 1287);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ap_packet.proto", &protobuf_RegisterTypes);
  ::cheetah::protobuf_AddDesc_ap_5fcommon_5ftypes_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ap_5fpacket_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ap_5fpacket_2eproto_once_);
void protobuf_AddDesc_ap_5fpacket_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ap_5fpacket_2eproto_once_,
                 &protobuf_AddDesc_ap_5fpacket_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ap_5fpacket_2eproto {
  StaticDescriptorInitializer_ap_5fpacket_2eproto() {
    protobuf_AddDesc_ap_5fpacket_2eproto();
  }
} static_descriptor_initializer_ap_5fpacket_2eproto_;
const ::google::protobuf::EnumDescriptor* APMsgType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APMsgType_descriptor_;
}
bool APMsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* APMgmtMsgSubtype_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APMgmtMsgSubtype_descriptor_;
}
bool APMgmtMsgSubtype_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 65535:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* APCtrlMsgSubtype_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APCtrlMsgSubtype_descriptor_;
}
bool APCtrlMsgSubtype_IsValid(int value) {
  switch (value) {
    case 0:
    case 65535:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* APDataMsgSubtype_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APDataMsgSubtype_descriptor_;
}
bool APDataMsgSubtype_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 65535:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* APCiscoMsgSubtype_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APCiscoMsgSubtype_descriptor_;
}
bool APCiscoMsgSubtype_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 65535:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APPacketHdr::kMsgTypeFieldNumber;
const int APPacketHdr::kMgmtFieldNumber;
const int APPacketHdr::kCtrlFieldNumber;
const int APPacketHdr::kDataFieldNumber;
const int APPacketHdr::kCiscoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APPacketHdr::APPacketHdr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ap_5fpacket_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:cheetah.APPacketHdr)
}

void APPacketHdr::InitAsDefaultInstance() {
  APPacketHdr_default_oneof_instance_->mgmt_ = 0;
  APPacketHdr_default_oneof_instance_->ctrl_ = 0;
  APPacketHdr_default_oneof_instance_->data_ = 0;
  APPacketHdr_default_oneof_instance_->cisco_ = 0;
}

APPacketHdr::APPacketHdr(const APPacketHdr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cheetah.APPacketHdr)
}

void APPacketHdr::SharedCtor() {
  msgtype_ = 0;
  clear_has_Subtype();
  _cached_size_ = 0;
}

APPacketHdr::~APPacketHdr() {
  // @@protoc_insertion_point(destructor:cheetah.APPacketHdr)
  SharedDtor();
}

void APPacketHdr::SharedDtor() {
  if (has_Subtype()) {
    clear_Subtype();
  }
}

void APPacketHdr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APPacketHdr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APPacketHdr_descriptor_;
}

const APPacketHdr& APPacketHdr::default_instance() {
  protobuf_InitDefaults_ap_5fpacket_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<APPacketHdr> APPacketHdr_default_instance_;

APPacketHdr* APPacketHdr::New(::google::protobuf::Arena* arena) const {
  APPacketHdr* n = new APPacketHdr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APPacketHdr::clear_Subtype() {
// @@protoc_insertion_point(one_of_clear_start:cheetah.APPacketHdr)
  switch (Subtype_case()) {
    case kMgmt: {
      // No need to clear
      break;
    }
    case kCtrl: {
      // No need to clear
      break;
    }
    case kData: {
      // No need to clear
      break;
    }
    case kCisco: {
      // No need to clear
      break;
    }
    case SUBTYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SUBTYPE_NOT_SET;
}


void APPacketHdr::Clear() {
// @@protoc_insertion_point(message_clear_start:cheetah.APPacketHdr)
  msgtype_ = 0;
  clear_Subtype();
}

bool APPacketHdr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cheetah.APPacketHdr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .cheetah.APMsgType MsgType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msgtype(static_cast< ::cheetah::APMsgType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mgmt;
        break;
      }

      // optional .cheetah.APMgmtMsgSubtype mgmt = 2;
      case 2: {
        if (tag == 16) {
         parse_mgmt:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mgmt(static_cast< ::cheetah::APMgmtMsgSubtype >(value));
        } else {
          goto handle_unusual;
        }
        goto after_cisco;
        break;
      }

      // optional .cheetah.APCtrlMsgSubtype ctrl = 3;
      case 3: {
        if (tag == 24) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ctrl(static_cast< ::cheetah::APCtrlMsgSubtype >(value));
        } else {
          goto handle_unusual;
        }
        goto after_cisco;
        break;
      }

      // optional .cheetah.APDataMsgSubtype data = 4;
      case 4: {
        if (tag == 32) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_data(static_cast< ::cheetah::APDataMsgSubtype >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_cisco;
        break;
      }

      // optional .cheetah.APCiscoMsgSubtype cisco = 5;
      case 5: {
        if (tag == 40) {
         parse_cisco:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cisco(static_cast< ::cheetah::APCiscoMsgSubtype >(value));
        } else {
          goto handle_unusual;
        }
       after_cisco:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cheetah.APPacketHdr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cheetah.APPacketHdr)
  return false;
#undef DO_
}

void APPacketHdr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cheetah.APPacketHdr)
  // optional .cheetah.APMsgType MsgType = 1;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .cheetah.APMgmtMsgSubtype mgmt = 2;
  if (has_mgmt()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mgmt(), output);
  }

  // optional .cheetah.APCtrlMsgSubtype ctrl = 3;
  if (has_ctrl()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->ctrl(), output);
  }

  // optional .cheetah.APDataMsgSubtype data = 4;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->data(), output);
  }

  // optional .cheetah.APCiscoMsgSubtype cisco = 5;
  if (has_cisco()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->cisco(), output);
  }

  // @@protoc_insertion_point(serialize_end:cheetah.APPacketHdr)
}

::google::protobuf::uint8* APPacketHdr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cheetah.APPacketHdr)
  // optional .cheetah.APMsgType MsgType = 1;
  if (this->msgtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .cheetah.APMgmtMsgSubtype mgmt = 2;
  if (has_mgmt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mgmt(), target);
  }

  // optional .cheetah.APCtrlMsgSubtype ctrl = 3;
  if (has_ctrl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->ctrl(), target);
  }

  // optional .cheetah.APDataMsgSubtype data = 4;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->data(), target);
  }

  // optional .cheetah.APCiscoMsgSubtype cisco = 5;
  if (has_cisco()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->cisco(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cheetah.APPacketHdr)
  return target;
}

size_t APPacketHdr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cheetah.APPacketHdr)
  size_t total_size = 0;

  // optional .cheetah.APMsgType MsgType = 1;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
  }

  switch (Subtype_case()) {
    // optional .cheetah.APMgmtMsgSubtype mgmt = 2;
    case kMgmt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mgmt());
      break;
    }
    // optional .cheetah.APCtrlMsgSubtype ctrl = 3;
    case kCtrl: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ctrl());
      break;
    }
    // optional .cheetah.APDataMsgSubtype data = 4;
    case kData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->data());
      break;
    }
    // optional .cheetah.APCiscoMsgSubtype cisco = 5;
    case kCisco: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cisco());
      break;
    }
    case SUBTYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APPacketHdr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cheetah.APPacketHdr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const APPacketHdr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APPacketHdr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cheetah.APPacketHdr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cheetah.APPacketHdr)
    UnsafeMergeFrom(*source);
  }
}

void APPacketHdr::MergeFrom(const APPacketHdr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cheetah.APPacketHdr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void APPacketHdr::UnsafeMergeFrom(const APPacketHdr& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.Subtype_case()) {
    case kMgmt: {
      set_mgmt(from.mgmt());
      break;
    }
    case kCtrl: {
      set_ctrl(from.ctrl());
      break;
    }
    case kData: {
      set_data(from.data());
      break;
    }
    case kCisco: {
      set_cisco(from.cisco());
      break;
    }
    case SUBTYPE_NOT_SET: {
      break;
    }
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
}

void APPacketHdr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cheetah.APPacketHdr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APPacketHdr::CopyFrom(const APPacketHdr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cheetah.APPacketHdr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool APPacketHdr::IsInitialized() const {

  return true;
}

void APPacketHdr::Swap(APPacketHdr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APPacketHdr::InternalSwap(APPacketHdr* other) {
  std::swap(msgtype_, other->msgtype_);
  std::swap(Subtype_, other->Subtype_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APPacketHdr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = APPacketHdr_descriptor_;
  metadata.reflection = APPacketHdr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APPacketHdr

// optional .cheetah.APMsgType MsgType = 1;
void APPacketHdr::clear_msgtype() {
  msgtype_ = 0;
}
::cheetah::APMsgType APPacketHdr::msgtype() const {
  // @@protoc_insertion_point(field_get:cheetah.APPacketHdr.MsgType)
  return static_cast< ::cheetah::APMsgType >(msgtype_);
}
void APPacketHdr::set_msgtype(::cheetah::APMsgType value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APPacketHdr.MsgType)
}

// optional .cheetah.APMgmtMsgSubtype mgmt = 2;
bool APPacketHdr::has_mgmt() const {
  return Subtype_case() == kMgmt;
}
void APPacketHdr::set_has_mgmt() {
  _oneof_case_[0] = kMgmt;
}
void APPacketHdr::clear_mgmt() {
  if (has_mgmt()) {
    Subtype_.mgmt_ = 0;
    clear_has_Subtype();
  }
}
::cheetah::APMgmtMsgSubtype APPacketHdr::mgmt() const {
  // @@protoc_insertion_point(field_get:cheetah.APPacketHdr.mgmt)
  if (has_mgmt()) {
    return static_cast< ::cheetah::APMgmtMsgSubtype >(Subtype_.mgmt_);
  }
  return static_cast< ::cheetah::APMgmtMsgSubtype >(0);
}
void APPacketHdr::set_mgmt(::cheetah::APMgmtMsgSubtype value) {
  if (!has_mgmt()) {
    clear_Subtype();
    set_has_mgmt();
  }
  Subtype_.mgmt_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APPacketHdr.mgmt)
}

// optional .cheetah.APCtrlMsgSubtype ctrl = 3;
bool APPacketHdr::has_ctrl() const {
  return Subtype_case() == kCtrl;
}
void APPacketHdr::set_has_ctrl() {
  _oneof_case_[0] = kCtrl;
}
void APPacketHdr::clear_ctrl() {
  if (has_ctrl()) {
    Subtype_.ctrl_ = 0;
    clear_has_Subtype();
  }
}
::cheetah::APCtrlMsgSubtype APPacketHdr::ctrl() const {
  // @@protoc_insertion_point(field_get:cheetah.APPacketHdr.ctrl)
  if (has_ctrl()) {
    return static_cast< ::cheetah::APCtrlMsgSubtype >(Subtype_.ctrl_);
  }
  return static_cast< ::cheetah::APCtrlMsgSubtype >(0);
}
void APPacketHdr::set_ctrl(::cheetah::APCtrlMsgSubtype value) {
  if (!has_ctrl()) {
    clear_Subtype();
    set_has_ctrl();
  }
  Subtype_.ctrl_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APPacketHdr.ctrl)
}

// optional .cheetah.APDataMsgSubtype data = 4;
bool APPacketHdr::has_data() const {
  return Subtype_case() == kData;
}
void APPacketHdr::set_has_data() {
  _oneof_case_[0] = kData;
}
void APPacketHdr::clear_data() {
  if (has_data()) {
    Subtype_.data_ = 0;
    clear_has_Subtype();
  }
}
::cheetah::APDataMsgSubtype APPacketHdr::data() const {
  // @@protoc_insertion_point(field_get:cheetah.APPacketHdr.data)
  if (has_data()) {
    return static_cast< ::cheetah::APDataMsgSubtype >(Subtype_.data_);
  }
  return static_cast< ::cheetah::APDataMsgSubtype >(0);
}
void APPacketHdr::set_data(::cheetah::APDataMsgSubtype value) {
  if (!has_data()) {
    clear_Subtype();
    set_has_data();
  }
  Subtype_.data_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APPacketHdr.data)
}

// optional .cheetah.APCiscoMsgSubtype cisco = 5;
bool APPacketHdr::has_cisco() const {
  return Subtype_case() == kCisco;
}
void APPacketHdr::set_has_cisco() {
  _oneof_case_[0] = kCisco;
}
void APPacketHdr::clear_cisco() {
  if (has_cisco()) {
    Subtype_.cisco_ = 0;
    clear_has_Subtype();
  }
}
::cheetah::APCiscoMsgSubtype APPacketHdr::cisco() const {
  // @@protoc_insertion_point(field_get:cheetah.APPacketHdr.cisco)
  if (has_cisco()) {
    return static_cast< ::cheetah::APCiscoMsgSubtype >(Subtype_.cisco_);
  }
  return static_cast< ::cheetah::APCiscoMsgSubtype >(0);
}
void APPacketHdr::set_cisco(::cheetah::APCiscoMsgSubtype value) {
  if (!has_cisco()) {
    clear_Subtype();
    set_has_cisco();
  }
  Subtype_.cisco_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APPacketHdr.cisco)
}

bool APPacketHdr::has_Subtype() const {
  return Subtype_case() != SUBTYPE_NOT_SET;
}
void APPacketHdr::clear_has_Subtype() {
  _oneof_case_[0] = SUBTYPE_NOT_SET;
}
APPacketHdr::SubtypeCase APPacketHdr::Subtype_case() const {
  return APPacketHdr::SubtypeCase(_oneof_case_[0]);
}
inline const APPacketHdr* APPacketHdr::internal_default_instance() {
  return &APPacketHdr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APPacketsMsg::kPacketHdrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APPacketsMsg::APPacketsMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ap_5fpacket_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:cheetah.APPacketsMsg)
}

void APPacketsMsg::InitAsDefaultInstance() {
}

APPacketsMsg::APPacketsMsg(const APPacketsMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cheetah.APPacketsMsg)
}

void APPacketsMsg::SharedCtor() {
  _cached_size_ = 0;
}

APPacketsMsg::~APPacketsMsg() {
  // @@protoc_insertion_point(destructor:cheetah.APPacketsMsg)
  SharedDtor();
}

void APPacketsMsg::SharedDtor() {
}

void APPacketsMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APPacketsMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APPacketsMsg_descriptor_;
}

const APPacketsMsg& APPacketsMsg::default_instance() {
  protobuf_InitDefaults_ap_5fpacket_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<APPacketsMsg> APPacketsMsg_default_instance_;

APPacketsMsg* APPacketsMsg::New(::google::protobuf::Arena* arena) const {
  APPacketsMsg* n = new APPacketsMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APPacketsMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:cheetah.APPacketsMsg)
  packethdr_.Clear();
}

bool APPacketsMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cheetah.APPacketsMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .cheetah.APPacketHdr PacketHdr = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_PacketHdr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_packethdr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_PacketHdr;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cheetah.APPacketsMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cheetah.APPacketsMsg)
  return false;
#undef DO_
}

void APPacketsMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cheetah.APPacketsMsg)
  // repeated .cheetah.APPacketHdr PacketHdr = 1;
  for (unsigned int i = 0, n = this->packethdr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->packethdr(i), output);
  }

  // @@protoc_insertion_point(serialize_end:cheetah.APPacketsMsg)
}

::google::protobuf::uint8* APPacketsMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cheetah.APPacketsMsg)
  // repeated .cheetah.APPacketHdr PacketHdr = 1;
  for (unsigned int i = 0, n = this->packethdr_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->packethdr(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cheetah.APPacketsMsg)
  return target;
}

size_t APPacketsMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cheetah.APPacketsMsg)
  size_t total_size = 0;

  // repeated .cheetah.APPacketHdr PacketHdr = 1;
  {
    unsigned int count = this->packethdr_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->packethdr(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APPacketsMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cheetah.APPacketsMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const APPacketsMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APPacketsMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cheetah.APPacketsMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cheetah.APPacketsMsg)
    UnsafeMergeFrom(*source);
  }
}

void APPacketsMsg::MergeFrom(const APPacketsMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cheetah.APPacketsMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void APPacketsMsg::UnsafeMergeFrom(const APPacketsMsg& from) {
  GOOGLE_DCHECK(&from != this);
  packethdr_.MergeFrom(from.packethdr_);
}

void APPacketsMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cheetah.APPacketsMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APPacketsMsg::CopyFrom(const APPacketsMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cheetah.APPacketsMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool APPacketsMsg::IsInitialized() const {

  return true;
}

void APPacketsMsg::Swap(APPacketsMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APPacketsMsg::InternalSwap(APPacketsMsg* other) {
  packethdr_.UnsafeArenaSwap(&other->packethdr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APPacketsMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = APPacketsMsg_descriptor_;
  metadata.reflection = APPacketsMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APPacketsMsg

// repeated .cheetah.APPacketHdr PacketHdr = 1;
int APPacketsMsg::packethdr_size() const {
  return packethdr_.size();
}
void APPacketsMsg::clear_packethdr() {
  packethdr_.Clear();
}
const ::cheetah::APPacketHdr& APPacketsMsg::packethdr(int index) const {
  // @@protoc_insertion_point(field_get:cheetah.APPacketsMsg.PacketHdr)
  return packethdr_.Get(index);
}
::cheetah::APPacketHdr* APPacketsMsg::mutable_packethdr(int index) {
  // @@protoc_insertion_point(field_mutable:cheetah.APPacketsMsg.PacketHdr)
  return packethdr_.Mutable(index);
}
::cheetah::APPacketHdr* APPacketsMsg::add_packethdr() {
  // @@protoc_insertion_point(field_add:cheetah.APPacketsMsg.PacketHdr)
  return packethdr_.Add();
}
::google::protobuf::RepeatedPtrField< ::cheetah::APPacketHdr >*
APPacketsMsg::mutable_packethdr() {
  // @@protoc_insertion_point(field_mutable_list:cheetah.APPacketsMsg.PacketHdr)
  return &packethdr_;
}
const ::google::protobuf::RepeatedPtrField< ::cheetah::APPacketHdr >&
APPacketsMsg::packethdr() const {
  // @@protoc_insertion_point(field_list:cheetah.APPacketsMsg.PacketHdr)
  return packethdr_;
}

inline const APPacketsMsg* APPacketsMsg::internal_default_instance() {
  return &APPacketsMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APPacketsMsgRsp::kErrStatusFieldNumber;
const int APPacketsMsgRsp::kPacketHdrFieldNumber;
const int APPacketsMsgRsp::kPacketLenFieldNumber;
const int APPacketsMsgRsp::kPacketBufFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APPacketsMsgRsp::APPacketsMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ap_5fpacket_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:cheetah.APPacketsMsgRsp)
}

void APPacketsMsgRsp::InitAsDefaultInstance() {
  errstatus_ = const_cast< ::cheetah::APErrorStatus*>(
      ::cheetah::APErrorStatus::internal_default_instance());
  packethdr_ = const_cast< ::cheetah::APPacketHdr*>(
      ::cheetah::APPacketHdr::internal_default_instance());
}

APPacketsMsgRsp::APPacketsMsgRsp(const APPacketsMsgRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cheetah.APPacketsMsgRsp)
}

void APPacketsMsgRsp::SharedCtor() {
  packetbuf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errstatus_ = NULL;
  packethdr_ = NULL;
  packetlen_ = 0u;
  _cached_size_ = 0;
}

APPacketsMsgRsp::~APPacketsMsgRsp() {
  // @@protoc_insertion_point(destructor:cheetah.APPacketsMsgRsp)
  SharedDtor();
}

void APPacketsMsgRsp::SharedDtor() {
  packetbuf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &APPacketsMsgRsp_default_instance_.get()) {
    delete errstatus_;
    delete packethdr_;
  }
}

void APPacketsMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APPacketsMsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APPacketsMsgRsp_descriptor_;
}

const APPacketsMsgRsp& APPacketsMsgRsp::default_instance() {
  protobuf_InitDefaults_ap_5fpacket_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<APPacketsMsgRsp> APPacketsMsgRsp_default_instance_;

APPacketsMsgRsp* APPacketsMsgRsp::New(::google::protobuf::Arena* arena) const {
  APPacketsMsgRsp* n = new APPacketsMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APPacketsMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:cheetah.APPacketsMsgRsp)
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
  if (GetArenaNoVirtual() == NULL && packethdr_ != NULL) delete packethdr_;
  packethdr_ = NULL;
  packetlen_ = 0u;
  packetbuf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool APPacketsMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cheetah.APPacketsMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .cheetah.APErrorStatus ErrStatus = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_PacketHdr;
        break;
      }

      // optional .cheetah.APPacketHdr PacketHdr = 2;
      case 2: {
        if (tag == 18) {
         parse_PacketHdr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_packethdr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PacketLen;
        break;
      }

      // optional uint32 PacketLen = 3;
      case 3: {
        if (tag == 24) {
         parse_PacketLen:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetlen_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_PacketBuf;
        break;
      }

      // optional bytes PacketBuf = 4;
      case 4: {
        if (tag == 34) {
         parse_PacketBuf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_packetbuf()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cheetah.APPacketsMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cheetah.APPacketsMsgRsp)
  return false;
#undef DO_
}

void APPacketsMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cheetah.APPacketsMsgRsp)
  // optional .cheetah.APErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // optional .cheetah.APPacketHdr PacketHdr = 2;
  if (this->has_packethdr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->packethdr_, output);
  }

  // optional uint32 PacketLen = 3;
  if (this->packetlen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->packetlen(), output);
  }

  // optional bytes PacketBuf = 4;
  if (this->packetbuf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->packetbuf(), output);
  }

  // @@protoc_insertion_point(serialize_end:cheetah.APPacketsMsgRsp)
}

::google::protobuf::uint8* APPacketsMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cheetah.APPacketsMsgRsp)
  // optional .cheetah.APErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errstatus_, false, target);
  }

  // optional .cheetah.APPacketHdr PacketHdr = 2;
  if (this->has_packethdr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->packethdr_, false, target);
  }

  // optional uint32 PacketLen = 3;
  if (this->packetlen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->packetlen(), target);
  }

  // optional bytes PacketBuf = 4;
  if (this->packetbuf().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->packetbuf(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cheetah.APPacketsMsgRsp)
  return target;
}

size_t APPacketsMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cheetah.APPacketsMsgRsp)
  size_t total_size = 0;

  // optional .cheetah.APErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // optional .cheetah.APPacketHdr PacketHdr = 2;
  if (this->has_packethdr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->packethdr_);
  }

  // optional uint32 PacketLen = 3;
  if (this->packetlen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetlen());
  }

  // optional bytes PacketBuf = 4;
  if (this->packetbuf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->packetbuf());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APPacketsMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cheetah.APPacketsMsgRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const APPacketsMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APPacketsMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cheetah.APPacketsMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cheetah.APPacketsMsgRsp)
    UnsafeMergeFrom(*source);
  }
}

void APPacketsMsgRsp::MergeFrom(const APPacketsMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cheetah.APPacketsMsgRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void APPacketsMsgRsp::UnsafeMergeFrom(const APPacketsMsgRsp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_errstatus()) {
    mutable_errstatus()->::cheetah::APErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.has_packethdr()) {
    mutable_packethdr()->::cheetah::APPacketHdr::MergeFrom(from.packethdr());
  }
  if (from.packetlen() != 0) {
    set_packetlen(from.packetlen());
  }
  if (from.packetbuf().size() > 0) {

    packetbuf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packetbuf_);
  }
}

void APPacketsMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cheetah.APPacketsMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APPacketsMsgRsp::CopyFrom(const APPacketsMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cheetah.APPacketsMsgRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool APPacketsMsgRsp::IsInitialized() const {

  return true;
}

void APPacketsMsgRsp::Swap(APPacketsMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APPacketsMsgRsp::InternalSwap(APPacketsMsgRsp* other) {
  std::swap(errstatus_, other->errstatus_);
  std::swap(packethdr_, other->packethdr_);
  std::swap(packetlen_, other->packetlen_);
  packetbuf_.Swap(&other->packetbuf_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APPacketsMsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = APPacketsMsgRsp_descriptor_;
  metadata.reflection = APPacketsMsgRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APPacketsMsgRsp

// optional .cheetah.APErrorStatus ErrStatus = 1;
bool APPacketsMsgRsp::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
void APPacketsMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::cheetah::APErrorStatus& APPacketsMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:cheetah.APPacketsMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_
                         : *::cheetah::APErrorStatus::internal_default_instance();
}
::cheetah::APErrorStatus* APPacketsMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::cheetah::APErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:cheetah.APPacketsMsgRsp.ErrStatus)
  return errstatus_;
}
::cheetah::APErrorStatus* APPacketsMsgRsp::release_errstatus() {
  // @@protoc_insertion_point(field_release:cheetah.APPacketsMsgRsp.ErrStatus)
  
  ::cheetah::APErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void APPacketsMsgRsp::set_allocated_errstatus(::cheetah::APErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:cheetah.APPacketsMsgRsp.ErrStatus)
}

// optional .cheetah.APPacketHdr PacketHdr = 2;
bool APPacketsMsgRsp::has_packethdr() const {
  return this != internal_default_instance() && packethdr_ != NULL;
}
void APPacketsMsgRsp::clear_packethdr() {
  if (GetArenaNoVirtual() == NULL && packethdr_ != NULL) delete packethdr_;
  packethdr_ = NULL;
}
const ::cheetah::APPacketHdr& APPacketsMsgRsp::packethdr() const {
  // @@protoc_insertion_point(field_get:cheetah.APPacketsMsgRsp.PacketHdr)
  return packethdr_ != NULL ? *packethdr_
                         : *::cheetah::APPacketHdr::internal_default_instance();
}
::cheetah::APPacketHdr* APPacketsMsgRsp::mutable_packethdr() {
  
  if (packethdr_ == NULL) {
    packethdr_ = new ::cheetah::APPacketHdr;
  }
  // @@protoc_insertion_point(field_mutable:cheetah.APPacketsMsgRsp.PacketHdr)
  return packethdr_;
}
::cheetah::APPacketHdr* APPacketsMsgRsp::release_packethdr() {
  // @@protoc_insertion_point(field_release:cheetah.APPacketsMsgRsp.PacketHdr)
  
  ::cheetah::APPacketHdr* temp = packethdr_;
  packethdr_ = NULL;
  return temp;
}
void APPacketsMsgRsp::set_allocated_packethdr(::cheetah::APPacketHdr* packethdr) {
  delete packethdr_;
  packethdr_ = packethdr;
  if (packethdr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:cheetah.APPacketsMsgRsp.PacketHdr)
}

// optional uint32 PacketLen = 3;
void APPacketsMsgRsp::clear_packetlen() {
  packetlen_ = 0u;
}
::google::protobuf::uint32 APPacketsMsgRsp::packetlen() const {
  // @@protoc_insertion_point(field_get:cheetah.APPacketsMsgRsp.PacketLen)
  return packetlen_;
}
void APPacketsMsgRsp::set_packetlen(::google::protobuf::uint32 value) {
  
  packetlen_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APPacketsMsgRsp.PacketLen)
}

// optional bytes PacketBuf = 4;
void APPacketsMsgRsp::clear_packetbuf() {
  packetbuf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& APPacketsMsgRsp::packetbuf() const {
  // @@protoc_insertion_point(field_get:cheetah.APPacketsMsgRsp.PacketBuf)
  return packetbuf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void APPacketsMsgRsp::set_packetbuf(const ::std::string& value) {
  
  packetbuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cheetah.APPacketsMsgRsp.PacketBuf)
}
void APPacketsMsgRsp::set_packetbuf(const char* value) {
  
  packetbuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cheetah.APPacketsMsgRsp.PacketBuf)
}
void APPacketsMsgRsp::set_packetbuf(const void* value, size_t size) {
  
  packetbuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cheetah.APPacketsMsgRsp.PacketBuf)
}
::std::string* APPacketsMsgRsp::mutable_packetbuf() {
  
  // @@protoc_insertion_point(field_mutable:cheetah.APPacketsMsgRsp.PacketBuf)
  return packetbuf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* APPacketsMsgRsp::release_packetbuf() {
  // @@protoc_insertion_point(field_release:cheetah.APPacketsMsgRsp.PacketBuf)
  
  return packetbuf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void APPacketsMsgRsp::set_allocated_packetbuf(::std::string* packetbuf) {
  if (packetbuf != NULL) {
    
  } else {
    
  }
  packetbuf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), packetbuf);
  // @@protoc_insertion_point(field_set_allocated:cheetah.APPacketsMsgRsp.PacketBuf)
}

inline const APPacketsMsgRsp* APPacketsMsgRsp::internal_default_instance() {
  return &APPacketsMsgRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace cheetah

// @@protoc_insertion_point(global_scope)
