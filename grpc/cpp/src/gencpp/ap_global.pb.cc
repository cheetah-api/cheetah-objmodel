// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ap_global.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ap_global.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cheetah {

namespace {

const ::google::protobuf::Descriptor* APInitMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  APInitMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* APInitMsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  APInitMsgRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* APCfgMsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  APCfgMsgRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* APGlobalNotif_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  APGlobalNotif_reflection_ = NULL;
struct APGlobalNotifOneofInstance {
  const ::cheetah::APInitMsgRsp* initrspmsg_;
  const ::cheetah::APCfgMsgRsp* cfgrspmsg_;
}* APGlobalNotif_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* APGlobalsGetMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  APGlobalsGetMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* APGlobalsGetMsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  APGlobalsGetMsgRsp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* APGlobalNotifType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ap_5fglobal_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ap_5fglobal_2eproto() {
  protobuf_AddDesc_ap_5fglobal_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ap_global.proto");
  GOOGLE_CHECK(file != NULL);
  APInitMsg_descriptor_ = file->message_type(0);
  static const int APInitMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APInitMsg, majorver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APInitMsg, minorver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APInitMsg, subver_),
  };
  APInitMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      APInitMsg_descriptor_,
      APInitMsg::internal_default_instance(),
      APInitMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(APInitMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APInitMsg, _internal_metadata_));
  APInitMsgRsp_descriptor_ = file->message_type(1);
  static const int APInitMsgRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APInitMsgRsp, majorver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APInitMsgRsp, minorver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APInitMsgRsp, subver_),
  };
  APInitMsgRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      APInitMsgRsp_descriptor_,
      APInitMsgRsp::internal_default_instance(),
      APInitMsgRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(APInitMsgRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APInitMsgRsp, _internal_metadata_));
  APCfgMsgRsp_descriptor_ = file->message_type(2);
  static const int APCfgMsgRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APCfgMsgRsp, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APCfgMsgRsp, proxyurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APCfgMsgRsp, proxyport_),
  };
  APCfgMsgRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      APCfgMsgRsp_descriptor_,
      APCfgMsgRsp::internal_default_instance(),
      APCfgMsgRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(APCfgMsgRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APCfgMsgRsp, _internal_metadata_));
  APGlobalNotif_descriptor_ = file->message_type(3);
  static const int APGlobalNotif_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APGlobalNotif, eventtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APGlobalNotif, errstatus_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(APGlobalNotif_default_oneof_instance_, initrspmsg_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(APGlobalNotif_default_oneof_instance_, cfgrspmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APGlobalNotif, Event_),
  };
  APGlobalNotif_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      APGlobalNotif_descriptor_,
      APGlobalNotif::internal_default_instance(),
      APGlobalNotif_offsets_,
      -1,
      -1,
      -1,
      APGlobalNotif_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APGlobalNotif, _oneof_case_[0]),
      sizeof(APGlobalNotif),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APGlobalNotif, _internal_metadata_));
  APGlobalsGetMsg_descriptor_ = file->message_type(4);
  static const int APGlobalsGetMsg_offsets_[1] = {
  };
  APGlobalsGetMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      APGlobalsGetMsg_descriptor_,
      APGlobalsGetMsg::internal_default_instance(),
      APGlobalsGetMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(APGlobalsGetMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APGlobalsGetMsg, _internal_metadata_));
  APGlobalsGetMsgRsp_descriptor_ = file->message_type(5);
  static const int APGlobalsGetMsgRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APGlobalsGetMsgRsp, errstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APGlobalsGetMsgRsp, maxradionamelength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APGlobalsGetMsgRsp, maxssidnamelength_),
  };
  APGlobalsGetMsgRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      APGlobalsGetMsgRsp_descriptor_,
      APGlobalsGetMsgRsp::internal_default_instance(),
      APGlobalsGetMsgRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(APGlobalsGetMsgRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APGlobalsGetMsgRsp, _internal_metadata_));
  APGlobalNotifType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ap_5fglobal_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      APInitMsg_descriptor_, APInitMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      APInitMsgRsp_descriptor_, APInitMsgRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      APCfgMsgRsp_descriptor_, APCfgMsgRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      APGlobalNotif_descriptor_, APGlobalNotif::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      APGlobalsGetMsg_descriptor_, APGlobalsGetMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      APGlobalsGetMsgRsp_descriptor_, APGlobalsGetMsgRsp::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ap_5fglobal_2eproto() {
  APInitMsg_default_instance_.Shutdown();
  delete APInitMsg_reflection_;
  APInitMsgRsp_default_instance_.Shutdown();
  delete APInitMsgRsp_reflection_;
  APCfgMsgRsp_default_instance_.Shutdown();
  delete APCfgMsgRsp_reflection_;
  APGlobalNotif_default_instance_.Shutdown();
  delete APGlobalNotif_default_oneof_instance_;
  delete APGlobalNotif_reflection_;
  APGlobalsGetMsg_default_instance_.Shutdown();
  delete APGlobalsGetMsg_reflection_;
  APGlobalsGetMsgRsp_default_instance_.Shutdown();
  delete APGlobalsGetMsgRsp_reflection_;
}

void protobuf_InitDefaults_ap_5fglobal_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::cheetah::protobuf_InitDefaults_ap_5fcommon_5ftypes_2eproto();
  APInitMsg_default_instance_.DefaultConstruct();
  APInitMsgRsp_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  APCfgMsgRsp_default_instance_.DefaultConstruct();
  APGlobalNotif_default_instance_.DefaultConstruct();
  APGlobalNotif_default_oneof_instance_ = new APGlobalNotifOneofInstance();
  APGlobalsGetMsg_default_instance_.DefaultConstruct();
  APGlobalsGetMsgRsp_default_instance_.DefaultConstruct();
  APInitMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  APInitMsgRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  APCfgMsgRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  APGlobalNotif_default_instance_.get_mutable()->InitAsDefaultInstance();
  APGlobalsGetMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  APGlobalsGetMsgRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_ap_5fglobal_2eproto_once_);
void protobuf_InitDefaults_ap_5fglobal_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_ap_5fglobal_2eproto_once_,
                 &protobuf_InitDefaults_ap_5fglobal_2eproto_impl);
}
void protobuf_AddDesc_ap_5fglobal_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_ap_5fglobal_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017ap_global.proto\022\007cheetah\032\025ap_common_ty"
    "pes.proto\"\?\n\tAPInitMsg\022\020\n\010MajorVer\030\001 \001(\r"
    "\022\020\n\010MinorVer\030\002 \001(\r\022\016\n\006SubVer\030\003 \001(\r\"B\n\014AP"
    "InitMsgRsp\022\020\n\010MajorVer\030\001 \001(\r\022\020\n\010MinorVer"
    "\030\002 \001(\r\022\016\n\006SubVer\030\003 \001(\r\"A\n\013APCfgMsgRsp\022\r\n"
    "\005Token\030\001 \001(\t\022\020\n\010ProxyURL\030\002 \001(\t\022\021\n\tProxyP"
    "ort\030\003 \001(\r\"\312\001\n\rAPGlobalNotif\022-\n\tEventType"
    "\030\001 \001(\0162\032.cheetah.APGlobalNotifType\022)\n\tEr"
    "rStatus\030\002 \001(\0132\026.cheetah.APErrorStatus\022+\n"
    "\nInitRspMsg\030\003 \001(\0132\025.cheetah.APInitMsgRsp"
    "H\000\022)\n\tCfgRspMsg\030\004 \001(\0132\024.cheetah.APCfgMsg"
    "RspH\000B\007\n\005Event\"\021\n\017APGlobalsGetMsg\"v\n\022APG"
    "lobalsGetMsgRsp\022)\n\tErrStatus\030\001 \001(\0132\026.che"
    "etah.APErrorStatus\022\032\n\022MaxRadioNameLength"
    "\030\002 \001(\r\022\031\n\021MaxSsidNameLength\030\003 \001(\r*\275\001\n\021AP"
    "GlobalNotifType\022!\n\035AP_GLOBAL_EVENT_TYPE_"
    "RESERVED\020\000\022\036\n\032AP_GLOBAL_EVENT_TYPE_ERROR"
    "\020\001\022\"\n\036AP_GLOBAL_EVENT_TYPE_HEARTBEAT\020\002\022 "
    "\n\034AP_GLOBAL_EVENT_TYPE_VERSION\020\003\022\037\n\033AP_G"
    "LOBAL_EVENT_TYPE_CONFIG\020\0042\224\001\n\010APGlobal\022A"
    "\n\021APGlobalInitNotif\022\022.cheetah.APInitMsg\032"
    "\026.cheetah.APGlobalNotif0\001\022E\n\014APGlobalsGe"
    "t\022\030.cheetah.APGlobalsGetMsg\032\033.cheetah.AP"
    "GlobalsGetMsgRspb\006proto3", 944);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ap_global.proto", &protobuf_RegisterTypes);
  ::cheetah::protobuf_AddDesc_ap_5fcommon_5ftypes_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ap_5fglobal_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ap_5fglobal_2eproto_once_);
void protobuf_AddDesc_ap_5fglobal_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ap_5fglobal_2eproto_once_,
                 &protobuf_AddDesc_ap_5fglobal_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ap_5fglobal_2eproto {
  StaticDescriptorInitializer_ap_5fglobal_2eproto() {
    protobuf_AddDesc_ap_5fglobal_2eproto();
  }
} static_descriptor_initializer_ap_5fglobal_2eproto_;
const ::google::protobuf::EnumDescriptor* APGlobalNotifType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APGlobalNotifType_descriptor_;
}
bool APGlobalNotifType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APInitMsg::kMajorVerFieldNumber;
const int APInitMsg::kMinorVerFieldNumber;
const int APInitMsg::kSubVerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APInitMsg::APInitMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ap_5fglobal_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:cheetah.APInitMsg)
}

void APInitMsg::InitAsDefaultInstance() {
}

APInitMsg::APInitMsg(const APInitMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cheetah.APInitMsg)
}

void APInitMsg::SharedCtor() {
  ::memset(&majorver_, 0, reinterpret_cast<char*>(&subver_) -
    reinterpret_cast<char*>(&majorver_) + sizeof(subver_));
  _cached_size_ = 0;
}

APInitMsg::~APInitMsg() {
  // @@protoc_insertion_point(destructor:cheetah.APInitMsg)
  SharedDtor();
}

void APInitMsg::SharedDtor() {
}

void APInitMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APInitMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APInitMsg_descriptor_;
}

const APInitMsg& APInitMsg::default_instance() {
  protobuf_InitDefaults_ap_5fglobal_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<APInitMsg> APInitMsg_default_instance_;

APInitMsg* APInitMsg::New(::google::protobuf::Arena* arena) const {
  APInitMsg* n = new APInitMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APInitMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:cheetah.APInitMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(APInitMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<APInitMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(majorver_, subver_);

#undef ZR_HELPER_
#undef ZR_

}

bool APInitMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cheetah.APInitMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MajorVer = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &majorver_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MinorVer;
        break;
      }

      // optional uint32 MinorVer = 2;
      case 2: {
        if (tag == 16) {
         parse_MinorVer:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minorver_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SubVer;
        break;
      }

      // optional uint32 SubVer = 3;
      case 3: {
        if (tag == 24) {
         parse_SubVer:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subver_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cheetah.APInitMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cheetah.APInitMsg)
  return false;
#undef DO_
}

void APInitMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cheetah.APInitMsg)
  // optional uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->majorver(), output);
  }

  // optional uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->minorver(), output);
  }

  // optional uint32 SubVer = 3;
  if (this->subver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->subver(), output);
  }

  // @@protoc_insertion_point(serialize_end:cheetah.APInitMsg)
}

::google::protobuf::uint8* APInitMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cheetah.APInitMsg)
  // optional uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->majorver(), target);
  }

  // optional uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->minorver(), target);
  }

  // optional uint32 SubVer = 3;
  if (this->subver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->subver(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cheetah.APInitMsg)
  return target;
}

size_t APInitMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cheetah.APInitMsg)
  size_t total_size = 0;

  // optional uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->majorver());
  }

  // optional uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minorver());
  }

  // optional uint32 SubVer = 3;
  if (this->subver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->subver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APInitMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cheetah.APInitMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const APInitMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APInitMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cheetah.APInitMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cheetah.APInitMsg)
    UnsafeMergeFrom(*source);
  }
}

void APInitMsg::MergeFrom(const APInitMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cheetah.APInitMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void APInitMsg::UnsafeMergeFrom(const APInitMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.majorver() != 0) {
    set_majorver(from.majorver());
  }
  if (from.minorver() != 0) {
    set_minorver(from.minorver());
  }
  if (from.subver() != 0) {
    set_subver(from.subver());
  }
}

void APInitMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cheetah.APInitMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APInitMsg::CopyFrom(const APInitMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cheetah.APInitMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool APInitMsg::IsInitialized() const {

  return true;
}

void APInitMsg::Swap(APInitMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APInitMsg::InternalSwap(APInitMsg* other) {
  std::swap(majorver_, other->majorver_);
  std::swap(minorver_, other->minorver_);
  std::swap(subver_, other->subver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APInitMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = APInitMsg_descriptor_;
  metadata.reflection = APInitMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APInitMsg

// optional uint32 MajorVer = 1;
void APInitMsg::clear_majorver() {
  majorver_ = 0u;
}
::google::protobuf::uint32 APInitMsg::majorver() const {
  // @@protoc_insertion_point(field_get:cheetah.APInitMsg.MajorVer)
  return majorver_;
}
void APInitMsg::set_majorver(::google::protobuf::uint32 value) {
  
  majorver_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APInitMsg.MajorVer)
}

// optional uint32 MinorVer = 2;
void APInitMsg::clear_minorver() {
  minorver_ = 0u;
}
::google::protobuf::uint32 APInitMsg::minorver() const {
  // @@protoc_insertion_point(field_get:cheetah.APInitMsg.MinorVer)
  return minorver_;
}
void APInitMsg::set_minorver(::google::protobuf::uint32 value) {
  
  minorver_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APInitMsg.MinorVer)
}

// optional uint32 SubVer = 3;
void APInitMsg::clear_subver() {
  subver_ = 0u;
}
::google::protobuf::uint32 APInitMsg::subver() const {
  // @@protoc_insertion_point(field_get:cheetah.APInitMsg.SubVer)
  return subver_;
}
void APInitMsg::set_subver(::google::protobuf::uint32 value) {
  
  subver_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APInitMsg.SubVer)
}

inline const APInitMsg* APInitMsg::internal_default_instance() {
  return &APInitMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APInitMsgRsp::kMajorVerFieldNumber;
const int APInitMsgRsp::kMinorVerFieldNumber;
const int APInitMsgRsp::kSubVerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APInitMsgRsp::APInitMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ap_5fglobal_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:cheetah.APInitMsgRsp)
}

void APInitMsgRsp::InitAsDefaultInstance() {
}

APInitMsgRsp::APInitMsgRsp(const APInitMsgRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cheetah.APInitMsgRsp)
}

void APInitMsgRsp::SharedCtor() {
  ::memset(&majorver_, 0, reinterpret_cast<char*>(&subver_) -
    reinterpret_cast<char*>(&majorver_) + sizeof(subver_));
  _cached_size_ = 0;
}

APInitMsgRsp::~APInitMsgRsp() {
  // @@protoc_insertion_point(destructor:cheetah.APInitMsgRsp)
  SharedDtor();
}

void APInitMsgRsp::SharedDtor() {
}

void APInitMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APInitMsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APInitMsgRsp_descriptor_;
}

const APInitMsgRsp& APInitMsgRsp::default_instance() {
  protobuf_InitDefaults_ap_5fglobal_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<APInitMsgRsp> APInitMsgRsp_default_instance_;

APInitMsgRsp* APInitMsgRsp::New(::google::protobuf::Arena* arena) const {
  APInitMsgRsp* n = new APInitMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APInitMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:cheetah.APInitMsgRsp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(APInitMsgRsp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<APInitMsgRsp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(majorver_, subver_);

#undef ZR_HELPER_
#undef ZR_

}

bool APInitMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cheetah.APInitMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MajorVer = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &majorver_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MinorVer;
        break;
      }

      // optional uint32 MinorVer = 2;
      case 2: {
        if (tag == 16) {
         parse_MinorVer:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minorver_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SubVer;
        break;
      }

      // optional uint32 SubVer = 3;
      case 3: {
        if (tag == 24) {
         parse_SubVer:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subver_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cheetah.APInitMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cheetah.APInitMsgRsp)
  return false;
#undef DO_
}

void APInitMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cheetah.APInitMsgRsp)
  // optional uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->majorver(), output);
  }

  // optional uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->minorver(), output);
  }

  // optional uint32 SubVer = 3;
  if (this->subver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->subver(), output);
  }

  // @@protoc_insertion_point(serialize_end:cheetah.APInitMsgRsp)
}

::google::protobuf::uint8* APInitMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cheetah.APInitMsgRsp)
  // optional uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->majorver(), target);
  }

  // optional uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->minorver(), target);
  }

  // optional uint32 SubVer = 3;
  if (this->subver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->subver(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cheetah.APInitMsgRsp)
  return target;
}

size_t APInitMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cheetah.APInitMsgRsp)
  size_t total_size = 0;

  // optional uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->majorver());
  }

  // optional uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minorver());
  }

  // optional uint32 SubVer = 3;
  if (this->subver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->subver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APInitMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cheetah.APInitMsgRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const APInitMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APInitMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cheetah.APInitMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cheetah.APInitMsgRsp)
    UnsafeMergeFrom(*source);
  }
}

void APInitMsgRsp::MergeFrom(const APInitMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cheetah.APInitMsgRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void APInitMsgRsp::UnsafeMergeFrom(const APInitMsgRsp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.majorver() != 0) {
    set_majorver(from.majorver());
  }
  if (from.minorver() != 0) {
    set_minorver(from.minorver());
  }
  if (from.subver() != 0) {
    set_subver(from.subver());
  }
}

void APInitMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cheetah.APInitMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APInitMsgRsp::CopyFrom(const APInitMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cheetah.APInitMsgRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool APInitMsgRsp::IsInitialized() const {

  return true;
}

void APInitMsgRsp::Swap(APInitMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APInitMsgRsp::InternalSwap(APInitMsgRsp* other) {
  std::swap(majorver_, other->majorver_);
  std::swap(minorver_, other->minorver_);
  std::swap(subver_, other->subver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APInitMsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = APInitMsgRsp_descriptor_;
  metadata.reflection = APInitMsgRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APInitMsgRsp

// optional uint32 MajorVer = 1;
void APInitMsgRsp::clear_majorver() {
  majorver_ = 0u;
}
::google::protobuf::uint32 APInitMsgRsp::majorver() const {
  // @@protoc_insertion_point(field_get:cheetah.APInitMsgRsp.MajorVer)
  return majorver_;
}
void APInitMsgRsp::set_majorver(::google::protobuf::uint32 value) {
  
  majorver_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APInitMsgRsp.MajorVer)
}

// optional uint32 MinorVer = 2;
void APInitMsgRsp::clear_minorver() {
  minorver_ = 0u;
}
::google::protobuf::uint32 APInitMsgRsp::minorver() const {
  // @@protoc_insertion_point(field_get:cheetah.APInitMsgRsp.MinorVer)
  return minorver_;
}
void APInitMsgRsp::set_minorver(::google::protobuf::uint32 value) {
  
  minorver_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APInitMsgRsp.MinorVer)
}

// optional uint32 SubVer = 3;
void APInitMsgRsp::clear_subver() {
  subver_ = 0u;
}
::google::protobuf::uint32 APInitMsgRsp::subver() const {
  // @@protoc_insertion_point(field_get:cheetah.APInitMsgRsp.SubVer)
  return subver_;
}
void APInitMsgRsp::set_subver(::google::protobuf::uint32 value) {
  
  subver_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APInitMsgRsp.SubVer)
}

inline const APInitMsgRsp* APInitMsgRsp::internal_default_instance() {
  return &APInitMsgRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APCfgMsgRsp::kTokenFieldNumber;
const int APCfgMsgRsp::kProxyURLFieldNumber;
const int APCfgMsgRsp::kProxyPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APCfgMsgRsp::APCfgMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ap_5fglobal_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:cheetah.APCfgMsgRsp)
}

void APCfgMsgRsp::InitAsDefaultInstance() {
}

APCfgMsgRsp::APCfgMsgRsp(const APCfgMsgRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cheetah.APCfgMsgRsp)
}

void APCfgMsgRsp::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proxyurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proxyport_ = 0u;
  _cached_size_ = 0;
}

APCfgMsgRsp::~APCfgMsgRsp() {
  // @@protoc_insertion_point(destructor:cheetah.APCfgMsgRsp)
  SharedDtor();
}

void APCfgMsgRsp::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proxyurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void APCfgMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APCfgMsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APCfgMsgRsp_descriptor_;
}

const APCfgMsgRsp& APCfgMsgRsp::default_instance() {
  protobuf_InitDefaults_ap_5fglobal_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<APCfgMsgRsp> APCfgMsgRsp_default_instance_;

APCfgMsgRsp* APCfgMsgRsp::New(::google::protobuf::Arena* arena) const {
  APCfgMsgRsp* n = new APCfgMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APCfgMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:cheetah.APCfgMsgRsp)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proxyurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proxyport_ = 0u;
}

bool APCfgMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cheetah.APCfgMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Token = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cheetah.APCfgMsgRsp.Token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ProxyURL;
        break;
      }

      // optional string ProxyURL = 2;
      case 2: {
        if (tag == 18) {
         parse_ProxyURL:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proxyurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->proxyurl().data(), this->proxyurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cheetah.APCfgMsgRsp.ProxyURL"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ProxyPort;
        break;
      }

      // optional uint32 ProxyPort = 3;
      case 3: {
        if (tag == 24) {
         parse_ProxyPort:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proxyport_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cheetah.APCfgMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cheetah.APCfgMsgRsp)
  return false;
#undef DO_
}

void APCfgMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cheetah.APCfgMsgRsp)
  // optional string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cheetah.APCfgMsgRsp.Token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // optional string ProxyURL = 2;
  if (this->proxyurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proxyurl().data(), this->proxyurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cheetah.APCfgMsgRsp.ProxyURL");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->proxyurl(), output);
  }

  // optional uint32 ProxyPort = 3;
  if (this->proxyport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->proxyport(), output);
  }

  // @@protoc_insertion_point(serialize_end:cheetah.APCfgMsgRsp)
}

::google::protobuf::uint8* APCfgMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cheetah.APCfgMsgRsp)
  // optional string Token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cheetah.APCfgMsgRsp.Token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // optional string ProxyURL = 2;
  if (this->proxyurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proxyurl().data(), this->proxyurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cheetah.APCfgMsgRsp.ProxyURL");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->proxyurl(), target);
  }

  // optional uint32 ProxyPort = 3;
  if (this->proxyport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->proxyport(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cheetah.APCfgMsgRsp)
  return target;
}

size_t APCfgMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cheetah.APCfgMsgRsp)
  size_t total_size = 0;

  // optional string Token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // optional string ProxyURL = 2;
  if (this->proxyurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->proxyurl());
  }

  // optional uint32 ProxyPort = 3;
  if (this->proxyport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->proxyport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APCfgMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cheetah.APCfgMsgRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const APCfgMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APCfgMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cheetah.APCfgMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cheetah.APCfgMsgRsp)
    UnsafeMergeFrom(*source);
  }
}

void APCfgMsgRsp::MergeFrom(const APCfgMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cheetah.APCfgMsgRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void APCfgMsgRsp::UnsafeMergeFrom(const APCfgMsgRsp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.proxyurl().size() > 0) {

    proxyurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proxyurl_);
  }
  if (from.proxyport() != 0) {
    set_proxyport(from.proxyport());
  }
}

void APCfgMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cheetah.APCfgMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APCfgMsgRsp::CopyFrom(const APCfgMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cheetah.APCfgMsgRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool APCfgMsgRsp::IsInitialized() const {

  return true;
}

void APCfgMsgRsp::Swap(APCfgMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APCfgMsgRsp::InternalSwap(APCfgMsgRsp* other) {
  token_.Swap(&other->token_);
  proxyurl_.Swap(&other->proxyurl_);
  std::swap(proxyport_, other->proxyport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APCfgMsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = APCfgMsgRsp_descriptor_;
  metadata.reflection = APCfgMsgRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APCfgMsgRsp

// optional string Token = 1;
void APCfgMsgRsp::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& APCfgMsgRsp::token() const {
  // @@protoc_insertion_point(field_get:cheetah.APCfgMsgRsp.Token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void APCfgMsgRsp::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cheetah.APCfgMsgRsp.Token)
}
void APCfgMsgRsp::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cheetah.APCfgMsgRsp.Token)
}
void APCfgMsgRsp::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cheetah.APCfgMsgRsp.Token)
}
::std::string* APCfgMsgRsp::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:cheetah.APCfgMsgRsp.Token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* APCfgMsgRsp::release_token() {
  // @@protoc_insertion_point(field_release:cheetah.APCfgMsgRsp.Token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void APCfgMsgRsp::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:cheetah.APCfgMsgRsp.Token)
}

// optional string ProxyURL = 2;
void APCfgMsgRsp::clear_proxyurl() {
  proxyurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& APCfgMsgRsp::proxyurl() const {
  // @@protoc_insertion_point(field_get:cheetah.APCfgMsgRsp.ProxyURL)
  return proxyurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void APCfgMsgRsp::set_proxyurl(const ::std::string& value) {
  
  proxyurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cheetah.APCfgMsgRsp.ProxyURL)
}
void APCfgMsgRsp::set_proxyurl(const char* value) {
  
  proxyurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cheetah.APCfgMsgRsp.ProxyURL)
}
void APCfgMsgRsp::set_proxyurl(const char* value, size_t size) {
  
  proxyurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cheetah.APCfgMsgRsp.ProxyURL)
}
::std::string* APCfgMsgRsp::mutable_proxyurl() {
  
  // @@protoc_insertion_point(field_mutable:cheetah.APCfgMsgRsp.ProxyURL)
  return proxyurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* APCfgMsgRsp::release_proxyurl() {
  // @@protoc_insertion_point(field_release:cheetah.APCfgMsgRsp.ProxyURL)
  
  return proxyurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void APCfgMsgRsp::set_allocated_proxyurl(::std::string* proxyurl) {
  if (proxyurl != NULL) {
    
  } else {
    
  }
  proxyurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxyurl);
  // @@protoc_insertion_point(field_set_allocated:cheetah.APCfgMsgRsp.ProxyURL)
}

// optional uint32 ProxyPort = 3;
void APCfgMsgRsp::clear_proxyport() {
  proxyport_ = 0u;
}
::google::protobuf::uint32 APCfgMsgRsp::proxyport() const {
  // @@protoc_insertion_point(field_get:cheetah.APCfgMsgRsp.ProxyPort)
  return proxyport_;
}
void APCfgMsgRsp::set_proxyport(::google::protobuf::uint32 value) {
  
  proxyport_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APCfgMsgRsp.ProxyPort)
}

inline const APCfgMsgRsp* APCfgMsgRsp::internal_default_instance() {
  return &APCfgMsgRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APGlobalNotif::kEventTypeFieldNumber;
const int APGlobalNotif::kErrStatusFieldNumber;
const int APGlobalNotif::kInitRspMsgFieldNumber;
const int APGlobalNotif::kCfgRspMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APGlobalNotif::APGlobalNotif()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ap_5fglobal_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:cheetah.APGlobalNotif)
}

void APGlobalNotif::InitAsDefaultInstance() {
  errstatus_ = const_cast< ::cheetah::APErrorStatus*>(
      ::cheetah::APErrorStatus::internal_default_instance());
  APGlobalNotif_default_oneof_instance_->initrspmsg_ = const_cast< ::cheetah::APInitMsgRsp*>(
      ::cheetah::APInitMsgRsp::internal_default_instance());
  APGlobalNotif_default_oneof_instance_->cfgrspmsg_ = const_cast< ::cheetah::APCfgMsgRsp*>(
      ::cheetah::APCfgMsgRsp::internal_default_instance());
}

APGlobalNotif::APGlobalNotif(const APGlobalNotif& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cheetah.APGlobalNotif)
}

void APGlobalNotif::SharedCtor() {
  errstatus_ = NULL;
  eventtype_ = 0;
  clear_has_Event();
  _cached_size_ = 0;
}

APGlobalNotif::~APGlobalNotif() {
  // @@protoc_insertion_point(destructor:cheetah.APGlobalNotif)
  SharedDtor();
}

void APGlobalNotif::SharedDtor() {
  if (has_Event()) {
    clear_Event();
  }
  if (this != &APGlobalNotif_default_instance_.get()) {
    delete errstatus_;
  }
}

void APGlobalNotif::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APGlobalNotif::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APGlobalNotif_descriptor_;
}

const APGlobalNotif& APGlobalNotif::default_instance() {
  protobuf_InitDefaults_ap_5fglobal_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<APGlobalNotif> APGlobalNotif_default_instance_;

APGlobalNotif* APGlobalNotif::New(::google::protobuf::Arena* arena) const {
  APGlobalNotif* n = new APGlobalNotif;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APGlobalNotif::clear_Event() {
// @@protoc_insertion_point(one_of_clear_start:cheetah.APGlobalNotif)
  switch (Event_case()) {
    case kInitRspMsg: {
      delete Event_.initrspmsg_;
      break;
    }
    case kCfgRspMsg: {
      delete Event_.cfgrspmsg_;
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void APGlobalNotif::Clear() {
// @@protoc_insertion_point(message_clear_start:cheetah.APGlobalNotif)
  eventtype_ = 0;
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
  clear_Event();
}

bool APGlobalNotif::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cheetah.APGlobalNotif)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .cheetah.APGlobalNotifType EventType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_eventtype(static_cast< ::cheetah::APGlobalNotifType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ErrStatus;
        break;
      }

      // optional .cheetah.APErrorStatus ErrStatus = 2;
      case 2: {
        if (tag == 18) {
         parse_ErrStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_InitRspMsg;
        break;
      }

      // optional .cheetah.APInitMsgRsp InitRspMsg = 3;
      case 3: {
        if (tag == 26) {
         parse_InitRspMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_initrspmsg()));
        } else {
          goto handle_unusual;
        }
        goto after_cfgrspmsg;
        break;
      }

      // optional .cheetah.APCfgMsgRsp CfgRspMsg = 4;
      case 4: {
        if (tag == 34) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cfgrspmsg()));
        } else {
          goto handle_unusual;
        }
       after_cfgrspmsg:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cheetah.APGlobalNotif)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cheetah.APGlobalNotif)
  return false;
#undef DO_
}

void APGlobalNotif::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cheetah.APGlobalNotif)
  // optional .cheetah.APGlobalNotifType EventType = 1;
  if (this->eventtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->eventtype(), output);
  }

  // optional .cheetah.APErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->errstatus_, output);
  }

  // optional .cheetah.APInitMsgRsp InitRspMsg = 3;
  if (has_initrspmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *Event_.initrspmsg_, output);
  }

  // optional .cheetah.APCfgMsgRsp CfgRspMsg = 4;
  if (has_cfgrspmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *Event_.cfgrspmsg_, output);
  }

  // @@protoc_insertion_point(serialize_end:cheetah.APGlobalNotif)
}

::google::protobuf::uint8* APGlobalNotif::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cheetah.APGlobalNotif)
  // optional .cheetah.APGlobalNotifType EventType = 1;
  if (this->eventtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->eventtype(), target);
  }

  // optional .cheetah.APErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->errstatus_, false, target);
  }

  // optional .cheetah.APInitMsgRsp InitRspMsg = 3;
  if (has_initrspmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *Event_.initrspmsg_, false, target);
  }

  // optional .cheetah.APCfgMsgRsp CfgRspMsg = 4;
  if (has_cfgrspmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *Event_.cfgrspmsg_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cheetah.APGlobalNotif)
  return target;
}

size_t APGlobalNotif::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cheetah.APGlobalNotif)
  size_t total_size = 0;

  // optional .cheetah.APGlobalNotifType EventType = 1;
  if (this->eventtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->eventtype());
  }

  // optional .cheetah.APErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  switch (Event_case()) {
    // optional .cheetah.APInitMsgRsp InitRspMsg = 3;
    case kInitRspMsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *Event_.initrspmsg_);
      break;
    }
    // optional .cheetah.APCfgMsgRsp CfgRspMsg = 4;
    case kCfgRspMsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *Event_.cfgrspmsg_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APGlobalNotif::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cheetah.APGlobalNotif)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const APGlobalNotif* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APGlobalNotif>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cheetah.APGlobalNotif)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cheetah.APGlobalNotif)
    UnsafeMergeFrom(*source);
  }
}

void APGlobalNotif::MergeFrom(const APGlobalNotif& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cheetah.APGlobalNotif)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void APGlobalNotif::UnsafeMergeFrom(const APGlobalNotif& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.Event_case()) {
    case kInitRspMsg: {
      mutable_initrspmsg()->::cheetah::APInitMsgRsp::MergeFrom(from.initrspmsg());
      break;
    }
    case kCfgRspMsg: {
      mutable_cfgrspmsg()->::cheetah::APCfgMsgRsp::MergeFrom(from.cfgrspmsg());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  if (from.eventtype() != 0) {
    set_eventtype(from.eventtype());
  }
  if (from.has_errstatus()) {
    mutable_errstatus()->::cheetah::APErrorStatus::MergeFrom(from.errstatus());
  }
}

void APGlobalNotif::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cheetah.APGlobalNotif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APGlobalNotif::CopyFrom(const APGlobalNotif& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cheetah.APGlobalNotif)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool APGlobalNotif::IsInitialized() const {

  return true;
}

void APGlobalNotif::Swap(APGlobalNotif* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APGlobalNotif::InternalSwap(APGlobalNotif* other) {
  std::swap(eventtype_, other->eventtype_);
  std::swap(errstatus_, other->errstatus_);
  std::swap(Event_, other->Event_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APGlobalNotif::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = APGlobalNotif_descriptor_;
  metadata.reflection = APGlobalNotif_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APGlobalNotif

// optional .cheetah.APGlobalNotifType EventType = 1;
void APGlobalNotif::clear_eventtype() {
  eventtype_ = 0;
}
::cheetah::APGlobalNotifType APGlobalNotif::eventtype() const {
  // @@protoc_insertion_point(field_get:cheetah.APGlobalNotif.EventType)
  return static_cast< ::cheetah::APGlobalNotifType >(eventtype_);
}
void APGlobalNotif::set_eventtype(::cheetah::APGlobalNotifType value) {
  
  eventtype_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APGlobalNotif.EventType)
}

// optional .cheetah.APErrorStatus ErrStatus = 2;
bool APGlobalNotif::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
void APGlobalNotif::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::cheetah::APErrorStatus& APGlobalNotif::errstatus() const {
  // @@protoc_insertion_point(field_get:cheetah.APGlobalNotif.ErrStatus)
  return errstatus_ != NULL ? *errstatus_
                         : *::cheetah::APErrorStatus::internal_default_instance();
}
::cheetah::APErrorStatus* APGlobalNotif::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::cheetah::APErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:cheetah.APGlobalNotif.ErrStatus)
  return errstatus_;
}
::cheetah::APErrorStatus* APGlobalNotif::release_errstatus() {
  // @@protoc_insertion_point(field_release:cheetah.APGlobalNotif.ErrStatus)
  
  ::cheetah::APErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void APGlobalNotif::set_allocated_errstatus(::cheetah::APErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:cheetah.APGlobalNotif.ErrStatus)
}

// optional .cheetah.APInitMsgRsp InitRspMsg = 3;
bool APGlobalNotif::has_initrspmsg() const {
  return Event_case() == kInitRspMsg;
}
void APGlobalNotif::set_has_initrspmsg() {
  _oneof_case_[0] = kInitRspMsg;
}
void APGlobalNotif::clear_initrspmsg() {
  if (has_initrspmsg()) {
    delete Event_.initrspmsg_;
    clear_has_Event();
  }
}
 const ::cheetah::APInitMsgRsp& APGlobalNotif::initrspmsg() const {
  // @@protoc_insertion_point(field_get:cheetah.APGlobalNotif.InitRspMsg)
  return has_initrspmsg()
      ? *Event_.initrspmsg_
      : ::cheetah::APInitMsgRsp::default_instance();
}
::cheetah::APInitMsgRsp* APGlobalNotif::mutable_initrspmsg() {
  if (!has_initrspmsg()) {
    clear_Event();
    set_has_initrspmsg();
    Event_.initrspmsg_ = new ::cheetah::APInitMsgRsp;
  }
  // @@protoc_insertion_point(field_mutable:cheetah.APGlobalNotif.InitRspMsg)
  return Event_.initrspmsg_;
}
::cheetah::APInitMsgRsp* APGlobalNotif::release_initrspmsg() {
  // @@protoc_insertion_point(field_release:cheetah.APGlobalNotif.InitRspMsg)
  if (has_initrspmsg()) {
    clear_has_Event();
    ::cheetah::APInitMsgRsp* temp = Event_.initrspmsg_;
    Event_.initrspmsg_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void APGlobalNotif::set_allocated_initrspmsg(::cheetah::APInitMsgRsp* initrspmsg) {
  clear_Event();
  if (initrspmsg) {
    set_has_initrspmsg();
    Event_.initrspmsg_ = initrspmsg;
  }
  // @@protoc_insertion_point(field_set_allocated:cheetah.APGlobalNotif.InitRspMsg)
}

// optional .cheetah.APCfgMsgRsp CfgRspMsg = 4;
bool APGlobalNotif::has_cfgrspmsg() const {
  return Event_case() == kCfgRspMsg;
}
void APGlobalNotif::set_has_cfgrspmsg() {
  _oneof_case_[0] = kCfgRspMsg;
}
void APGlobalNotif::clear_cfgrspmsg() {
  if (has_cfgrspmsg()) {
    delete Event_.cfgrspmsg_;
    clear_has_Event();
  }
}
 const ::cheetah::APCfgMsgRsp& APGlobalNotif::cfgrspmsg() const {
  // @@protoc_insertion_point(field_get:cheetah.APGlobalNotif.CfgRspMsg)
  return has_cfgrspmsg()
      ? *Event_.cfgrspmsg_
      : ::cheetah::APCfgMsgRsp::default_instance();
}
::cheetah::APCfgMsgRsp* APGlobalNotif::mutable_cfgrspmsg() {
  if (!has_cfgrspmsg()) {
    clear_Event();
    set_has_cfgrspmsg();
    Event_.cfgrspmsg_ = new ::cheetah::APCfgMsgRsp;
  }
  // @@protoc_insertion_point(field_mutable:cheetah.APGlobalNotif.CfgRspMsg)
  return Event_.cfgrspmsg_;
}
::cheetah::APCfgMsgRsp* APGlobalNotif::release_cfgrspmsg() {
  // @@protoc_insertion_point(field_release:cheetah.APGlobalNotif.CfgRspMsg)
  if (has_cfgrspmsg()) {
    clear_has_Event();
    ::cheetah::APCfgMsgRsp* temp = Event_.cfgrspmsg_;
    Event_.cfgrspmsg_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void APGlobalNotif::set_allocated_cfgrspmsg(::cheetah::APCfgMsgRsp* cfgrspmsg) {
  clear_Event();
  if (cfgrspmsg) {
    set_has_cfgrspmsg();
    Event_.cfgrspmsg_ = cfgrspmsg;
  }
  // @@protoc_insertion_point(field_set_allocated:cheetah.APGlobalNotif.CfgRspMsg)
}

bool APGlobalNotif::has_Event() const {
  return Event_case() != EVENT_NOT_SET;
}
void APGlobalNotif::clear_has_Event() {
  _oneof_case_[0] = EVENT_NOT_SET;
}
APGlobalNotif::EventCase APGlobalNotif::Event_case() const {
  return APGlobalNotif::EventCase(_oneof_case_[0]);
}
inline const APGlobalNotif* APGlobalNotif::internal_default_instance() {
  return &APGlobalNotif_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APGlobalsGetMsg::APGlobalsGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ap_5fglobal_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:cheetah.APGlobalsGetMsg)
}

void APGlobalsGetMsg::InitAsDefaultInstance() {
}

APGlobalsGetMsg::APGlobalsGetMsg(const APGlobalsGetMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cheetah.APGlobalsGetMsg)
}

void APGlobalsGetMsg::SharedCtor() {
  _cached_size_ = 0;
}

APGlobalsGetMsg::~APGlobalsGetMsg() {
  // @@protoc_insertion_point(destructor:cheetah.APGlobalsGetMsg)
  SharedDtor();
}

void APGlobalsGetMsg::SharedDtor() {
}

void APGlobalsGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APGlobalsGetMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APGlobalsGetMsg_descriptor_;
}

const APGlobalsGetMsg& APGlobalsGetMsg::default_instance() {
  protobuf_InitDefaults_ap_5fglobal_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<APGlobalsGetMsg> APGlobalsGetMsg_default_instance_;

APGlobalsGetMsg* APGlobalsGetMsg::New(::google::protobuf::Arena* arena) const {
  APGlobalsGetMsg* n = new APGlobalsGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APGlobalsGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:cheetah.APGlobalsGetMsg)
}

bool APGlobalsGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cheetah.APGlobalsGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:cheetah.APGlobalsGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cheetah.APGlobalsGetMsg)
  return false;
#undef DO_
}

void APGlobalsGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cheetah.APGlobalsGetMsg)
  // @@protoc_insertion_point(serialize_end:cheetah.APGlobalsGetMsg)
}

::google::protobuf::uint8* APGlobalsGetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cheetah.APGlobalsGetMsg)
  // @@protoc_insertion_point(serialize_to_array_end:cheetah.APGlobalsGetMsg)
  return target;
}

size_t APGlobalsGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cheetah.APGlobalsGetMsg)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APGlobalsGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cheetah.APGlobalsGetMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const APGlobalsGetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APGlobalsGetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cheetah.APGlobalsGetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cheetah.APGlobalsGetMsg)
    UnsafeMergeFrom(*source);
  }
}

void APGlobalsGetMsg::MergeFrom(const APGlobalsGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cheetah.APGlobalsGetMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void APGlobalsGetMsg::UnsafeMergeFrom(const APGlobalsGetMsg& from) {
  GOOGLE_DCHECK(&from != this);
}

void APGlobalsGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cheetah.APGlobalsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APGlobalsGetMsg::CopyFrom(const APGlobalsGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cheetah.APGlobalsGetMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool APGlobalsGetMsg::IsInitialized() const {

  return true;
}

void APGlobalsGetMsg::Swap(APGlobalsGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APGlobalsGetMsg::InternalSwap(APGlobalsGetMsg* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APGlobalsGetMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = APGlobalsGetMsg_descriptor_;
  metadata.reflection = APGlobalsGetMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APGlobalsGetMsg

inline const APGlobalsGetMsg* APGlobalsGetMsg::internal_default_instance() {
  return &APGlobalsGetMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APGlobalsGetMsgRsp::kErrStatusFieldNumber;
const int APGlobalsGetMsgRsp::kMaxRadioNameLengthFieldNumber;
const int APGlobalsGetMsgRsp::kMaxSsidNameLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APGlobalsGetMsgRsp::APGlobalsGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ap_5fglobal_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:cheetah.APGlobalsGetMsgRsp)
}

void APGlobalsGetMsgRsp::InitAsDefaultInstance() {
  errstatus_ = const_cast< ::cheetah::APErrorStatus*>(
      ::cheetah::APErrorStatus::internal_default_instance());
}

APGlobalsGetMsgRsp::APGlobalsGetMsgRsp(const APGlobalsGetMsgRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cheetah.APGlobalsGetMsgRsp)
}

void APGlobalsGetMsgRsp::SharedCtor() {
  errstatus_ = NULL;
  ::memset(&maxradionamelength_, 0, reinterpret_cast<char*>(&maxssidnamelength_) -
    reinterpret_cast<char*>(&maxradionamelength_) + sizeof(maxssidnamelength_));
  _cached_size_ = 0;
}

APGlobalsGetMsgRsp::~APGlobalsGetMsgRsp() {
  // @@protoc_insertion_point(destructor:cheetah.APGlobalsGetMsgRsp)
  SharedDtor();
}

void APGlobalsGetMsgRsp::SharedDtor() {
  if (this != &APGlobalsGetMsgRsp_default_instance_.get()) {
    delete errstatus_;
  }
}

void APGlobalsGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APGlobalsGetMsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APGlobalsGetMsgRsp_descriptor_;
}

const APGlobalsGetMsgRsp& APGlobalsGetMsgRsp::default_instance() {
  protobuf_InitDefaults_ap_5fglobal_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<APGlobalsGetMsgRsp> APGlobalsGetMsgRsp_default_instance_;

APGlobalsGetMsgRsp* APGlobalsGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  APGlobalsGetMsgRsp* n = new APGlobalsGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APGlobalsGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:cheetah.APGlobalsGetMsgRsp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(APGlobalsGetMsgRsp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<APGlobalsGetMsgRsp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(maxradionamelength_, maxssidnamelength_);
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool APGlobalsGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cheetah.APGlobalsGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .cheetah.APErrorStatus ErrStatus = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MaxRadioNameLength;
        break;
      }

      // optional uint32 MaxRadioNameLength = 2;
      case 2: {
        if (tag == 16) {
         parse_MaxRadioNameLength:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxradionamelength_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MaxSsidNameLength;
        break;
      }

      // optional uint32 MaxSsidNameLength = 3;
      case 3: {
        if (tag == 24) {
         parse_MaxSsidNameLength:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxssidnamelength_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cheetah.APGlobalsGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cheetah.APGlobalsGetMsgRsp)
  return false;
#undef DO_
}

void APGlobalsGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cheetah.APGlobalsGetMsgRsp)
  // optional .cheetah.APErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // optional uint32 MaxRadioNameLength = 2;
  if (this->maxradionamelength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxradionamelength(), output);
  }

  // optional uint32 MaxSsidNameLength = 3;
  if (this->maxssidnamelength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxssidnamelength(), output);
  }

  // @@protoc_insertion_point(serialize_end:cheetah.APGlobalsGetMsgRsp)
}

::google::protobuf::uint8* APGlobalsGetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cheetah.APGlobalsGetMsgRsp)
  // optional .cheetah.APErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errstatus_, false, target);
  }

  // optional uint32 MaxRadioNameLength = 2;
  if (this->maxradionamelength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxradionamelength(), target);
  }

  // optional uint32 MaxSsidNameLength = 3;
  if (this->maxssidnamelength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxssidnamelength(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cheetah.APGlobalsGetMsgRsp)
  return target;
}

size_t APGlobalsGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cheetah.APGlobalsGetMsgRsp)
  size_t total_size = 0;

  // optional .cheetah.APErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // optional uint32 MaxRadioNameLength = 2;
  if (this->maxradionamelength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxradionamelength());
  }

  // optional uint32 MaxSsidNameLength = 3;
  if (this->maxssidnamelength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxssidnamelength());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APGlobalsGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cheetah.APGlobalsGetMsgRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const APGlobalsGetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APGlobalsGetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cheetah.APGlobalsGetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cheetah.APGlobalsGetMsgRsp)
    UnsafeMergeFrom(*source);
  }
}

void APGlobalsGetMsgRsp::MergeFrom(const APGlobalsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cheetah.APGlobalsGetMsgRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void APGlobalsGetMsgRsp::UnsafeMergeFrom(const APGlobalsGetMsgRsp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_errstatus()) {
    mutable_errstatus()->::cheetah::APErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.maxradionamelength() != 0) {
    set_maxradionamelength(from.maxradionamelength());
  }
  if (from.maxssidnamelength() != 0) {
    set_maxssidnamelength(from.maxssidnamelength());
  }
}

void APGlobalsGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cheetah.APGlobalsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APGlobalsGetMsgRsp::CopyFrom(const APGlobalsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cheetah.APGlobalsGetMsgRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool APGlobalsGetMsgRsp::IsInitialized() const {

  return true;
}

void APGlobalsGetMsgRsp::Swap(APGlobalsGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APGlobalsGetMsgRsp::InternalSwap(APGlobalsGetMsgRsp* other) {
  std::swap(errstatus_, other->errstatus_);
  std::swap(maxradionamelength_, other->maxradionamelength_);
  std::swap(maxssidnamelength_, other->maxssidnamelength_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APGlobalsGetMsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = APGlobalsGetMsgRsp_descriptor_;
  metadata.reflection = APGlobalsGetMsgRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APGlobalsGetMsgRsp

// optional .cheetah.APErrorStatus ErrStatus = 1;
bool APGlobalsGetMsgRsp::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
void APGlobalsGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::cheetah::APErrorStatus& APGlobalsGetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:cheetah.APGlobalsGetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_
                         : *::cheetah::APErrorStatus::internal_default_instance();
}
::cheetah::APErrorStatus* APGlobalsGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::cheetah::APErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:cheetah.APGlobalsGetMsgRsp.ErrStatus)
  return errstatus_;
}
::cheetah::APErrorStatus* APGlobalsGetMsgRsp::release_errstatus() {
  // @@protoc_insertion_point(field_release:cheetah.APGlobalsGetMsgRsp.ErrStatus)
  
  ::cheetah::APErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void APGlobalsGetMsgRsp::set_allocated_errstatus(::cheetah::APErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:cheetah.APGlobalsGetMsgRsp.ErrStatus)
}

// optional uint32 MaxRadioNameLength = 2;
void APGlobalsGetMsgRsp::clear_maxradionamelength() {
  maxradionamelength_ = 0u;
}
::google::protobuf::uint32 APGlobalsGetMsgRsp::maxradionamelength() const {
  // @@protoc_insertion_point(field_get:cheetah.APGlobalsGetMsgRsp.MaxRadioNameLength)
  return maxradionamelength_;
}
void APGlobalsGetMsgRsp::set_maxradionamelength(::google::protobuf::uint32 value) {
  
  maxradionamelength_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APGlobalsGetMsgRsp.MaxRadioNameLength)
}

// optional uint32 MaxSsidNameLength = 3;
void APGlobalsGetMsgRsp::clear_maxssidnamelength() {
  maxssidnamelength_ = 0u;
}
::google::protobuf::uint32 APGlobalsGetMsgRsp::maxssidnamelength() const {
  // @@protoc_insertion_point(field_get:cheetah.APGlobalsGetMsgRsp.MaxSsidNameLength)
  return maxssidnamelength_;
}
void APGlobalsGetMsgRsp::set_maxssidnamelength(::google::protobuf::uint32 value) {
  
  maxssidnamelength_ = value;
  // @@protoc_insertion_point(field_set:cheetah.APGlobalsGetMsgRsp.MaxSsidNameLength)
}

inline const APGlobalsGetMsgRsp* APGlobalsGetMsgRsp::internal_default_instance() {
  return &APGlobalsGetMsgRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace cheetah

// @@protoc_insertion_point(global_scope)
