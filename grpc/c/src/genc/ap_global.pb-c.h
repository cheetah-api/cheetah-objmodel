/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ap_global.proto */

#ifndef PROTOBUF_C_ap_5fglobal_2eproto__INCLUDED
#define PROTOBUF_C_ap_5fglobal_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "ap_common_types.pb-c.h"

typedef struct _Cheetah__APInitMsg Cheetah__APInitMsg;
typedef struct _Cheetah__APInitMsgRsp Cheetah__APInitMsgRsp;
typedef struct _Cheetah__APCfgMsgRsp Cheetah__APCfgMsgRsp;
typedef struct _Cheetah__APGlobalNotif Cheetah__APGlobalNotif;
typedef struct _Cheetah__APGlobalsGetMsg Cheetah__APGlobalsGetMsg;
typedef struct _Cheetah__APGlobalsGetMsgRsp Cheetah__APGlobalsGetMsgRsp;


/* --- enums --- */

/*
 * Global Event Notification types.
 */
typedef enum _Cheetah__APGlobalNotifType {
  /*
   * Reserved. 0x0
   */
  CHEETAH__APGLOBAL_NOTIF_TYPE__AP_GLOBAL_EVENT_TYPE_RESERVED = 0,
  /*
   * Error. ErrStatus field elaborates on the message. 0x1
   */
  CHEETAH__APGLOBAL_NOTIF_TYPE__AP_GLOBAL_EVENT_TYPE_ERROR = 1,
  /*
   * HeartBeat. 0x2
   */
  CHEETAH__APGLOBAL_NOTIF_TYPE__AP_GLOBAL_EVENT_TYPE_HEARTBEAT = 2,
  /*
   * Version. APInitMsgRsp field elaborates on the server version. 0x3
   */
  CHEETAH__APGLOBAL_NOTIF_TYPE__AP_GLOBAL_EVENT_TYPE_VERSION = 3,
  /*
   * Configuration. 0x4
   */
  CHEETAH__APGLOBAL_NOTIF_TYPE__AP_GLOBAL_EVENT_TYPE_CONFIG = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CHEETAH__APGLOBAL_NOTIF_TYPE)
} Cheetah__APGlobalNotifType;

/* --- messages --- */

/*
 * Initialization message sent to the server.
 * If the client and server are running compatible version numbers, a
 * connection will be made and the server response will be received
 * with a successful status code.
 */
struct  _Cheetah__APInitMsg
{
  ProtobufCMessage base;
  /*
   * Client's Major version of service-layer API (refer to ap_version.proto)
   */
  uint32_t majorver;
  /*
   * Minor Version
   */
  uint32_t minorver;
  /*
   * Sub-Version
   */
  uint32_t subver;
};
#define CHEETAH__APINIT_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cheetah__apinit_msg__descriptor) \
    , 0, 0, 0 }


/*
 * Server's response to the APInitMsg.
 * On Success (ErrStatus), the session with the server is established
 * and the client is allowed to proceed.
 */
struct  _Cheetah__APInitMsgRsp
{
  ProtobufCMessage base;
  /*
   * Server's version of access point API (refer to ap_version.proto)
   * Major-number revisions are NOT backwards compatible,
   * unless otherwise specified. The Server may reject a session if there
   * is a version number mismatch or non-backwards compatibility.
   */
  uint32_t majorver;
  /*
   * Minor Version
   */
  uint32_t minorver;
  /*
   * Sub-Version
   */
  uint32_t subver;
};
#define CHEETAH__APINIT_MSG_RSP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cheetah__apinit_msg_rsp__descriptor) \
    , 0, 0, 0 }


/*
 * Configuration message response.
 * The server could send this message any time the application configuration
 * gets changed.
 */
struct  _Cheetah__APCfgMsgRsp
{
  ProtobufCMessage base;
  /*
   * Token string
   */
  char *token;
  /*
   * Proxy URL
   */
  char *proxyurl;
  /*
   * Proxy Port
   */
  uint32_t proxyport;
};
#define CHEETAH__APCFG_MSG_RSP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cheetah__apcfg_msg_rsp__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


typedef enum {
  CHEETAH__APGLOBAL_NOTIF__EVENT__NOT_SET = 0,
  CHEETAH__APGLOBAL_NOTIF__EVENT_INIT_RSP_MSG = 3,
  CHEETAH__APGLOBAL_NOTIF__EVENT_CFG_RSP_MSG = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CHEETAH__APGLOBAL_NOTIF__EVENT)
} Cheetah__APGlobalNotif__EventCase;

/*
 * Globals query message.
 */
struct  _Cheetah__APGlobalNotif
{
  ProtobufCMessage base;
  /*
   * Event Type.
   */
  Cheetah__APGlobalNotifType eventtype;
  /*
   * Status code, interpreted based on the Event Type.
   *   case EventType == AP_GLOBAL_EVENT_TYPE_ERROR:
   *       case ErrStatus == AP_NOTIF_TERM:
   *          => Another client is attempting to take over the session.
   *             This session will be closed.
   *       case ErrStatus == (some error from APErrorStatus)
   *          => Client must look into the specific error message returned.
   *   case EventType == AP_GLOBAL_EVENT_TYPE_HEARTBEAT:
   *       case ErrStatus == AP_SUCCESS
   *          => Client can safely ignore this heartbeat message.
   *   case EventType == AP_GLOBAL_EVENT_TYPE_VERSION:
   *       case ErrStatus == AP_SUCCESS
   *          => Client version accepted.
   *       case ErrStatus == AP_INIT_STATE_READY
   *          => Client version accepted.
   *             Any previous state was sucessfully recovered.
   *       case ErrStatus == AP_INIT_STATE_CLEAR
   *          => Client version accepted. Any previous state was lost.
   *             Client must replay all previous objects to server.
   *       case ErrStatus == AP_UNSUPPORTED_VER
   *          => Client and Server version mismatch. The client is not
   *             allowed to proceed, and the channel will be closed.
   *       case ErrStatus == (some error from APErrorStatus)
   *          => Client must either try again, or look into the specific
   *             error message returned.
   */
  Cheetah__APErrorStatus *errstatus;
  Cheetah__APGlobalNotif__EventCase event_case;
  union {
    /*
     * case EventType == AP_GLOBAL_EVENT_TYPE_VERSION:
     *     => this field carries the Server version number.
     */
    Cheetah__APInitMsgRsp *initrspmsg;
    /*
     * case EventType == AP_GLOBAL_EVENT_TYPE_CONFIG:
     *     => this field carries configuration pertinent to the application
     */
    Cheetah__APCfgMsgRsp *cfgrspmsg;
  };
};
#define CHEETAH__APGLOBAL_NOTIF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cheetah__apglobal_notif__descriptor) \
    , CHEETAH__APGLOBAL_NOTIF_TYPE__AP_GLOBAL_EVENT_TYPE_RESERVED, NULL, CHEETAH__APGLOBAL_NOTIF__EVENT__NOT_SET, {0} }


/*
 * Globals query message.
 */
struct  _Cheetah__APGlobalsGetMsg
{
  ProtobufCMessage base;
};
#define CHEETAH__APGLOBALS_GET_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cheetah__apglobals_get_msg__descriptor) \
     }


/*
 * Platform specific globals Response.
 */
struct  _Cheetah__APGlobalsGetMsgRsp
{
  ProtobufCMessage base;
  /*
   * Corresponding error code
   */
  Cheetah__APErrorStatus *errstatus;
  /*
   * Maximum radio name length
   */
  uint32_t maxradionamelength;
  /*
   * Maximum ssid name length
   */
  uint32_t maxssidnamelength;
};
#define CHEETAH__APGLOBALS_GET_MSG_RSP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cheetah__apglobals_get_msg_rsp__descriptor) \
    , NULL, 0, 0 }


/* Cheetah__APInitMsg methods */
void   cheetah__apinit_msg__init
                     (Cheetah__APInitMsg         *message);
size_t cheetah__apinit_msg__get_packed_size
                     (const Cheetah__APInitMsg   *message);
size_t cheetah__apinit_msg__pack
                     (const Cheetah__APInitMsg   *message,
                      uint8_t             *out);
size_t cheetah__apinit_msg__pack_to_buffer
                     (const Cheetah__APInitMsg   *message,
                      ProtobufCBuffer     *buffer);
Cheetah__APInitMsg *
       cheetah__apinit_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cheetah__apinit_msg__free_unpacked
                     (Cheetah__APInitMsg *message,
                      ProtobufCAllocator *allocator);
/* Cheetah__APInitMsgRsp methods */
void   cheetah__apinit_msg_rsp__init
                     (Cheetah__APInitMsgRsp         *message);
size_t cheetah__apinit_msg_rsp__get_packed_size
                     (const Cheetah__APInitMsgRsp   *message);
size_t cheetah__apinit_msg_rsp__pack
                     (const Cheetah__APInitMsgRsp   *message,
                      uint8_t             *out);
size_t cheetah__apinit_msg_rsp__pack_to_buffer
                     (const Cheetah__APInitMsgRsp   *message,
                      ProtobufCBuffer     *buffer);
Cheetah__APInitMsgRsp *
       cheetah__apinit_msg_rsp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cheetah__apinit_msg_rsp__free_unpacked
                     (Cheetah__APInitMsgRsp *message,
                      ProtobufCAllocator *allocator);
/* Cheetah__APCfgMsgRsp methods */
void   cheetah__apcfg_msg_rsp__init
                     (Cheetah__APCfgMsgRsp         *message);
size_t cheetah__apcfg_msg_rsp__get_packed_size
                     (const Cheetah__APCfgMsgRsp   *message);
size_t cheetah__apcfg_msg_rsp__pack
                     (const Cheetah__APCfgMsgRsp   *message,
                      uint8_t             *out);
size_t cheetah__apcfg_msg_rsp__pack_to_buffer
                     (const Cheetah__APCfgMsgRsp   *message,
                      ProtobufCBuffer     *buffer);
Cheetah__APCfgMsgRsp *
       cheetah__apcfg_msg_rsp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cheetah__apcfg_msg_rsp__free_unpacked
                     (Cheetah__APCfgMsgRsp *message,
                      ProtobufCAllocator *allocator);
/* Cheetah__APGlobalNotif methods */
void   cheetah__apglobal_notif__init
                     (Cheetah__APGlobalNotif         *message);
size_t cheetah__apglobal_notif__get_packed_size
                     (const Cheetah__APGlobalNotif   *message);
size_t cheetah__apglobal_notif__pack
                     (const Cheetah__APGlobalNotif   *message,
                      uint8_t             *out);
size_t cheetah__apglobal_notif__pack_to_buffer
                     (const Cheetah__APGlobalNotif   *message,
                      ProtobufCBuffer     *buffer);
Cheetah__APGlobalNotif *
       cheetah__apglobal_notif__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cheetah__apglobal_notif__free_unpacked
                     (Cheetah__APGlobalNotif *message,
                      ProtobufCAllocator *allocator);
/* Cheetah__APGlobalsGetMsg methods */
void   cheetah__apglobals_get_msg__init
                     (Cheetah__APGlobalsGetMsg         *message);
size_t cheetah__apglobals_get_msg__get_packed_size
                     (const Cheetah__APGlobalsGetMsg   *message);
size_t cheetah__apglobals_get_msg__pack
                     (const Cheetah__APGlobalsGetMsg   *message,
                      uint8_t             *out);
size_t cheetah__apglobals_get_msg__pack_to_buffer
                     (const Cheetah__APGlobalsGetMsg   *message,
                      ProtobufCBuffer     *buffer);
Cheetah__APGlobalsGetMsg *
       cheetah__apglobals_get_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cheetah__apglobals_get_msg__free_unpacked
                     (Cheetah__APGlobalsGetMsg *message,
                      ProtobufCAllocator *allocator);
/* Cheetah__APGlobalsGetMsgRsp methods */
void   cheetah__apglobals_get_msg_rsp__init
                     (Cheetah__APGlobalsGetMsgRsp         *message);
size_t cheetah__apglobals_get_msg_rsp__get_packed_size
                     (const Cheetah__APGlobalsGetMsgRsp   *message);
size_t cheetah__apglobals_get_msg_rsp__pack
                     (const Cheetah__APGlobalsGetMsgRsp   *message,
                      uint8_t             *out);
size_t cheetah__apglobals_get_msg_rsp__pack_to_buffer
                     (const Cheetah__APGlobalsGetMsgRsp   *message,
                      ProtobufCBuffer     *buffer);
Cheetah__APGlobalsGetMsgRsp *
       cheetah__apglobals_get_msg_rsp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cheetah__apglobals_get_msg_rsp__free_unpacked
                     (Cheetah__APGlobalsGetMsgRsp *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cheetah__APInitMsg_Closure)
                 (const Cheetah__APInitMsg *message,
                  void *closure_data);
typedef void (*Cheetah__APInitMsgRsp_Closure)
                 (const Cheetah__APInitMsgRsp *message,
                  void *closure_data);
typedef void (*Cheetah__APCfgMsgRsp_Closure)
                 (const Cheetah__APCfgMsgRsp *message,
                  void *closure_data);
typedef void (*Cheetah__APGlobalNotif_Closure)
                 (const Cheetah__APGlobalNotif *message,
                  void *closure_data);
typedef void (*Cheetah__APGlobalsGetMsg_Closure)
                 (const Cheetah__APGlobalsGetMsg *message,
                  void *closure_data);
typedef void (*Cheetah__APGlobalsGetMsgRsp_Closure)
                 (const Cheetah__APGlobalsGetMsgRsp *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Cheetah__APGlobal_Service Cheetah__APGlobal_Service;
struct _Cheetah__APGlobal_Service
{
  ProtobufCService base;
  void (*apglobal_init_notif)(Cheetah__APGlobal_Service *service,
                              const Cheetah__APInitMsg *input,
                              Cheetah__APGlobalNotif_Closure closure,
                              void *closure_data);
  void (*apglobals_get)(Cheetah__APGlobal_Service *service,
                        const Cheetah__APGlobalsGetMsg *input,
                        Cheetah__APGlobalsGetMsgRsp_Closure closure,
                        void *closure_data);
};
typedef void (*Cheetah__APGlobal_ServiceDestroy)(Cheetah__APGlobal_Service *);
void cheetah__apglobal__init (Cheetah__APGlobal_Service *service,
                              Cheetah__APGlobal_ServiceDestroy destroy);
#define CHEETAH__APGLOBAL__BASE_INIT \
    { &cheetah__apglobal__descriptor, protobuf_c_service_invoke_internal, NULL }
#define CHEETAH__APGLOBAL__INIT(function_prefix__) \
    { CHEETAH__APGLOBAL__BASE_INIT,\
      function_prefix__ ## apglobal_init_notif,\
      function_prefix__ ## apglobals_get  }
void cheetah__apglobal__apglobal_init_notif(ProtobufCService *service,
                                            const Cheetah__APInitMsg *input,
                                            Cheetah__APGlobalNotif_Closure closure,
                                            void *closure_data);
void cheetah__apglobal__apglobals_get(ProtobufCService *service,
                                      const Cheetah__APGlobalsGetMsg *input,
                                      Cheetah__APGlobalsGetMsgRsp_Closure closure,
                                      void *closure_data);

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    cheetah__apglobal_notif_type__descriptor;
extern const ProtobufCMessageDescriptor cheetah__apinit_msg__descriptor;
extern const ProtobufCMessageDescriptor cheetah__apinit_msg_rsp__descriptor;
extern const ProtobufCMessageDescriptor cheetah__apcfg_msg_rsp__descriptor;
extern const ProtobufCMessageDescriptor cheetah__apglobal_notif__descriptor;
extern const ProtobufCMessageDescriptor cheetah__apglobals_get_msg__descriptor;
extern const ProtobufCMessageDescriptor cheetah__apglobals_get_msg_rsp__descriptor;
extern const ProtobufCServiceDescriptor cheetah__apglobal__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ap_5fglobal_2eproto__INCLUDED */
